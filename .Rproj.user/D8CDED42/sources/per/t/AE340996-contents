rf_pred=function(initial_matrix,fitting_error) {
  modified_matrix=initial_matrix
  colnames(modified_matrix)=make.names(colnames(modified_matrix))
  modified_matrix=jitter(modified_matrix,0.00001)
  dummy=which(apply(modified_matrix,2,function(x) all(is.finite(x)))==T)
  dummy2=missRanger::missRanger(as.data.frame(modified_matrix[,dummy]))
  modified_matrix[,dummy]=as.matrix(dummy2)
  analyzed_signals=which(apply(modified_matrix,2,function(x) all(is.finite(x)))==T)
  predicted_matrix=lower_bound_matrix=upper_bound_matrix=as.data.frame(matrix(NA,nrow(modified_matrix),ncol(modified_matrix)))
  ctrl <- caret::trainControl(method = "boot632",number=18,savePredictions="all")
  for (i in analyzed_signals) {
    training_data=data.frame(y=modified_matrix[,i],scale(modified_matrix[,setdiff(analyzed_signals,i)]))
    plsFit <- caret::train(y ~ .,data = training_data,method = "lasso",trControl = ctrl)
    ind=which(varImp(plsFit)$importance$Overall>30)
    if (length(ind==1)) ind=order(varImp(plsFit)$importance$Overall,decreasing=T)[1:2]
    training_data=data.frame(y=modified_matrix[,i],scale(modified_matrix[,setdiff(analyzed_signals,i)][,ind]))
    plsFit <- caret::train(y ~ .,data = training_data,method = "ranger",trControl = ctrl)
    iii=plsFit$pred
    ff=sapply(seq(nrow(training_data)),function(x)quantile(rnorm(1000,mean=mean(iii$pred[iii$rowIndex==x],na.rm=T),
                                                                 sd=sd(iii$pred[iii$rowIndex==x],na.rm=T)),c(0.025,0.5,0.975),na.rm=T))
    predicted_matrix[,i]=ff[2,]
    lower_bound_matrix[,i]=ff[1,]
    upper_bound_matrix[,i]=ff[3,]
  }


  predicted_matrix=missRanger::missRanger(predicted_matrix)
  lower_bound_matrix=missRanger::missRanger(lower_bound_matrix)
  upper_bound_matrix=missRanger::missRanger(upper_bound_matrix)

  output=list(predicted_matrix=predicted_matrix,lower_bound_matrix=lower_bound_matrix,upper_bound_matrix=upper_bound_matrix)
  return(output)
}
