library(readr)
library(tidypvals)
library(ggplot2)
library(grid)
library(gridExtra)
library(dplyr)


undersampler=function(p_distribution,samp,factor_name=deparse(substitute(p_distribution))){
tro=matrix(NA,100,512)
for (i in 1:100) set.seed(i);tro[i,]=density(p_distribution[sample(length(p_distribution),samp)],from=0,to=0.06)$y
undersampled_distribution=data.frame(y=apply(tro,2,function(x)median(x,na.rm=T)),x=seq(0,0.06,len=512),z=rep(factor_name,512))
}

g_legend=function(a.gplot){
  tmp = ggplot_gtable(ggplot_build(a.gplot))
  leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend = tmp$grobs[[leg]]
  return(legend)}


allp = rbind(anti_join(head2015,chavalarias2016),
             anti_join(chavalarias2016,head2015),
             semi_join(head2015,chavalarias2016))
allp$pvalue=as.numeric(as.character(allp$pvalue))
allp$journal=tolower(allp$journal)

setwd("F:/New folder")
metabolomics_scopus_data=read_csv('metabolomics_scopus_data.csv')
journal_if_information=read_csv('journal_if_information.csv')


results_group_1=metabolomics_scopus_data[grep("nuclear magnetic resonance",metabolomics_scopus_data$Abstract),]
results_group_2=metabolomics_scopus_data[grep("mass spectrometry",metabolomics_scopus_data$Abstract),]
germany=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
ms=allp$pvalue[allp$pmid %in% results_group_2$PubMed.ID[!is.na(results_group_2$PubMed.ID)]==T|allp$doi %in% results_group_2$DOI[!is.na(results_group_2$DOI)]]
samp=min(c(length(nmr),length(ms)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(nmr,samp,'NMR'))
data=rbind(data,undersampler(ms,samp,'MS'))
p1=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+geom_line(size=1.2)+
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Platform')

results_group_1=metabolomics_scopus_data[grep("liquid chromatography",metabolomics_scopus_data$Abstract),]
results_group_2=metabolomics_scopus_data[grep("gas chromatography",metabolomics_scopus_data$Abstract),]
LC=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
GC=allp$pvalue[allp$pmid %in% results_group_2$PubMed.ID[!is.na(results_group_2$PubMed.ID)]==T|allp$doi %in% results_group_2$DOI[!is.na(results_group_2$DOI)]]
samp=min(c(length(LC),length(GC)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(LC,samp))
data=rbind(data,undersampler(GC,samp))
p2=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+geom_line(size=1.2)+
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Chromatography')


results_group_1=metabolomics_scopus_data[grep("untargeted",metabolomics_scopus_data$Abstract),]
results_group_2=metabolomics_scopus_data[grep("targeted",metabolomics_scopus_data$Abstract),]
Untargeted=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
Targeted=allp$pvalue[allp$pmid %in% results_group_2$PubMed.ID[!is.na(results_group_2$PubMed.ID)]==T|allp$doi %in% results_group_2$DOI[!is.na(results_group_2$DOI)]]
samp=min(c(length(Untargeted),length(Targeted)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(Untargeted,samp))
data=rbind(data,undersampler(Targeted,samp))
p3=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+geom_line(size=1.2)+
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Approach')


results_group_1=metabolomics_scopus_data[c(grep("serum",metabolomics_scopus_data$Abstract)),]
results_group_3=metabolomics_scopus_data[c(grep("plasma",metabolomics_scopus_data$Abstract)),]
results_group_2=metabolomics_scopus_data[grep("urine",metabolomics_scopus_data$Abstract),]
Serum=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
Plasma=allp$pvalue[allp$pmid %in% results_group_3$PubMed.ID[!is.na(results_group_3$PubMed.ID)]==T|allp$doi %in% results_group_3$DOI[!is.na(results_group_3$DOI)]]
Urine=allp$pvalue[allp$pmid %in% results_group_2$PubMed.ID[!is.na(results_group_2$PubMed.ID)]==T|allp$doi %in% results_group_2$DOI[!is.na(results_group_2$DOI)]]
samp=min(c(length(Untargeted),length(Targeted)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(Serum,samp))
data=rbind(data,undersampler(Plasma,samp))
data=rbind(data,undersampler(Urine,samp))
p4=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+geom_line(size=1.2)+
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Biofluid')

png("factors.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p1,p2,p3,p4,nrow=2,
                              top="Density plot of p values by several metabolomics-specific factors")))
dev.off()


ks_p_vals__factors=data.frame(c(prop.test(c(length(ms[ms<=0.025]), length(nmr[nmr<=0.025])), c(length(ms[ms<=0.05]), length(nmr[nmr<=0.05])))
$p.value,
prop.test(c(length(LC[LC<=0.025]), length(GC[GC<=0.025])), c(length(LC[LC<=0.05]), length(GC[GC<=0.05])))
$p.value,
prop.test(c(length(Untargeted[Untargeted<=0.025]), length(Targeted[Targeted<=0.025])), c(length(Untargeted[Untargeted<=0.05]), length(Targeted[Targeted<=0.05])))
$p.value,
prop.test(c(length(Urine[Urine<=0.025]), length(Serum[Serum<=0.025])), c(length(Urine[Urine<=0.05]), length(Serum[Serum<=0.05])))
$p.value,
prop.test(c(length(Urine[Urine<=0.025]), length(Plasma[Plasma<=0.025])), c(length(Urine[Urine<=0.05]), length(Plasma[Plasma<=0.05])))
$p.value,
prop.test(c(length(Serum[Serum<=0.025]), length(Plasma[Plasma<=0.025])), c(length(Serum[Serum<=0.05]), length(Plasma[Plasma<=0.05])))
$p.value))

rownames(ks_p_vals__factors)=c('NMR vs MS',"LC vs GC","Untargeted vs Targeted",
                 "Urine vs Plasma","Urine vs Serum","Serum vs Plasma")
colnames(ks_p_vals__factors)=NULL

#####


####3

genomics_pubmed = read_csv("genomics.csv")
genomics=allp$pvalue[allp$pmid %in% genomics_pubmed$EntrezUID | allp$doi %in% genomics_pubmed$DOI]
metabolomics=allp$pvalue[allp$pmid %in% metabolomics_scopus_data$PubMed.ID[!is.na(metabolomics_scopus_data$PubMed.ID)]==T|allp$doi %in% metabolomics_scopus_data$DOI[!is.na(metabolomics_scopus_data$DOI)]]
proteomics_pubmed = read_csv("proteomics.csv")
proteomics=allp$pvalue[allp$pmid %in% proteomics_pubmed$EntrezUID | allp$doi %in% proteomics_pubmed$DOI]
transcriptomics_pubmed = read_csv("transcriptomics.csv")
transcriptomics=allp$pvalue[allp$pmid %in% transcriptomics_pubmed$EntrezUID | allp$doi %in% transcriptomics_pubmed$DOI]
samp=min(c(length(genomics),length(metabolomics),
           length(proteomics),length(transcriptomics)))

ks_p_vals__field=data.frame(c(prop.test(c(length(genomics[genomics<=0.025]), length(metabolomics[metabolomics<=0.025])), c(length(genomics[genomics<=0.05]), length(metabolomics[metabolomics<=0.05])))$p.value,
                                prop.test(c(length(genomics[genomics<=0.025]), length(proteomics[proteomics<=0.025])), c(length(genomics[genomics<=0.05]), length(proteomics[proteomics<=0.05])))$p.value,
                                prop.test(c(length(genomics[genomics<=0.025]), length(transcriptomics[transcriptomics<=0.025])), c(length(genomics[genomics<=0.05]), length(transcriptomics[transcriptomics<=0.05])))$p.value,
                                prop.test(c(length(metabolomics[metabolomics<=0.025]), length(proteomics[proteomics<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(proteomics[proteomics<=0.05])))$p.value,
                                prop.test(c(length(metabolomics[metabolomics<=0.025]), length(transcriptomics[transcriptomics<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(transcriptomics[transcriptomics<=0.05])))$p.value,
                                prop.test(c(length(proteomics[proteomics<=0.025]), length(transcriptomics[transcriptomics<=0.025])), c(length(proteomics[proteomics<=0.05]), length(transcriptomics[transcriptomics<=0.05])))$p.value))
rownames(ks_p_vals__field)=c('Genomics vs Metabolomics',"Genomics vs Proteomics",
                             "Genomics vs Transcriptomics","Metabolomics vs Proteomics",
                             "Metabolomics vs Transcriptomics","Proteomics vs Transcriptomics")
colnames(ks_p_vals__field)=NULL
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(genomics,samp,'Genomics'))
data=rbind(data,undersampler(metabolomics,samp,'Metabolomics'))
data=rbind(data,undersampler(proteomics,samp,'Proteomics'))
data=rbind(data,undersampler(transcriptomics,samp,'Transcriptomics'))

png("field.png", width = 760, height = 450)
ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Density plot of p values by field") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Field')

dev.off()

#####

human_pubmed = read_csv("human_genomics.csv")
human=allp$pvalue[allp$pmid %in% human_pubmed$EntrezUID | allp$doi %in% human_pubmed$DOI]
animal_pubmed = read_csv("animal_genomics.csv")
animal=allp$pvalue[allp$pmid %in% animal_pubmed$EntrezUID | allp$doi %in% animal_pubmed$DOI]
plant_pubmed = read_csv("plant_genomics.csv")
plant=allp$pvalue[allp$pmid %in% plant_pubmed$EntrezUID | allp$doi %in% plant_pubmed$DOI]
bacteria_pubmed = read_csv("bacteria_genomics.csv")
bacteria=allp$pvalue[allp$pmid %in% bacteria_pubmed$EntrezUID | allp$doi %in% bacteria_pubmed$DOI]
global_pubmed = read_csv("genomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID | allp$doi %in% global_pubmed$DOI]
samp=min(c(length(human),length(animal),length(plant),length(bacteria)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(human,samp,"Human"))
data=rbind(data,undersampler(animal,samp,"Animal"))
data=rbind(data,undersampler(bacteria,samp,"Bacteria"))
data=rbind(data,undersampler(plant,samp,"Plant"))
p1=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Genomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Species/Kingdom')

ks_p_vals_1=c(prop.test(c(length(global[global<=0.025]), length(human[human<=0.025])), c(length(global[global<=0.05]), length(human[human<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(animal[animal<=0.025])), c(length(global[global<=0.05]), length(animal[animal<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(plant[plant<=0.025])), c(length(global[global<=0.05]), length(plant[plant<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(bacteria[bacteria<=0.025])), c(length(global[global<=0.05]), length(bacteria[bacteria<=0.05])))$p.value
)


results_group_1=metabolomics_scopus_data[grep("human",metabolomics_scopus_data$Abstract),]
results_group_2=metabolomics_scopus_data[grep("animal",metabolomics_scopus_data$Abstract),]
results_group_3=metabolomics_scopus_data[grep("plant",metabolomics_scopus_data$Abstract),]
results_group_4=metabolomics_scopus_data[grep("bacteria",metabolomics_scopus_data$Abstract),]
human=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
animal=allp$pvalue[allp$pmid %in% results_group_2$PubMed.ID[!is.na(results_group_2$PubMed.ID)]==T|allp$doi %in% results_group_2$DOI[!is.na(results_group_2$DOI)]]
plant=allp$pvalue[allp$pmid %in% results_group_3$PubMed.ID[!is.na(results_group_3$PubMed.ID)]==T|allp$doi %in% results_group_3$DOI[!is.na(results_group_3$DOI)]]
bacteria=allp$pvalue[allp$pmid %in% results_group_4$PubMed.ID[!is.na(results_group_4$PubMed.ID)]==T|allp$doi %in% results_group_4$DOI[!is.na(results_group_4$DOI)]]
samp=min(c(length(human),length(animal),length(plant),length(bacteria)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(human,samp,"Human"))
data=rbind(data,undersampler(animal,samp,"Animal"))
data=rbind(data,undersampler(bacteria,samp,"Bacteria"))
data=rbind(data,undersampler(plant,samp,"Plant"))
p2=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Metabolomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Species/Kingdom')

ks_p_vals_2=c(prop.test(c(length(global[global<=0.025]), length(human[human<=0.025])), c(length(global[global<=0.05]), length(human[human<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(animal[animal<=0.025])), c(length(global[global<=0.05]), length(animal[animal<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(plant[plant<=0.025])), c(length(global[global<=0.05]), length(plant[plant<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(bacteria[bacteria<=0.025])), c(length(global[global<=0.05]), length(bacteria[bacteria<=0.05])))$p.value
)
human_pubmed = read_csv("human_proteomics.csv")
human=allp$pvalue[allp$pmid %in% human_pubmed$EntrezUID | allp$doi %in% human_pubmed$DOI]
animal_pubmed = read_csv("animal_proteomics.csv")
animal=allp$pvalue[allp$pmid %in% animal_pubmed$EntrezUID | allp$doi %in% animal_pubmed$DOI]
plant_pubmed = read_csv("plant_proteomics.csv")
plant=allp$pvalue[allp$pmid %in% plant_pubmed$EntrezUID | allp$doi %in% plant_pubmed$DOI]
bacteria_pubmed = read_csv("bacteria_proteomics.csv")
bacteria=allp$pvalue[allp$pmid %in% bacteria_pubmed$EntrezUID | allp$doi %in% bacteria_pubmed$DOI]
global_pubmed = read_csv("proteomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID | allp$doi %in% global_pubmed$DOI]
samp=min(c(length(human),length(animal),length(plant),length(bacteria)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(human,samp,"Human"))
data=rbind(data,undersampler(animal,samp,"Animal"))
data=rbind(data,undersampler(bacteria,samp,"Bacteria"))
data=rbind(data,undersampler(plant,samp,"Plant"))
p3=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Proteomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Species/Kingdom')

ks_p_vals_3=c(prop.test(c(length(global[global<=0.025]), length(human[human<=0.025])), c(length(global[global<=0.05]), length(human[human<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(animal[animal<=0.025])), c(length(global[global<=0.05]), length(animal[animal<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(plant[plant<=0.025])), c(length(global[global<=0.05]), length(plant[plant<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(bacteria[bacteria<=0.025])), c(length(global[global<=0.05]), length(bacteria[bacteria<=0.05])))$p.value
)

human_pubmed = read_csv("human_transcriptomics.csv")
human=allp$pvalue[allp$pmid %in% human_pubmed$EntrezUID | allp$doi %in% human_pubmed$DOI]
animal_pubmed = read_csv("animal_transcriptomics.csv")
animal=allp$pvalue[allp$pmid %in% animal_pubmed$EntrezUID | allp$doi %in% animal_pubmed$DOI]
plant_pubmed = read_csv("plant_transcriptomics.csv")
plant=allp$pvalue[allp$pmid %in% plant_pubmed$EntrezUID | allp$doi %in% plant_pubmed$DOI]
bacteria_pubmed = read_csv("bacteria_transcriptomics.csv")
bacteria=allp$pvalue[allp$pmid %in% bacteria_pubmed$EntrezUID | allp$doi %in% bacteria_pubmed$DOI]
global_pubmed = read_csv("transcriptomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID | allp$doi %in% global_pubmed$DOI]
samp=min(c(length(human),length(animal),length(plant),length(bacteria)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(human,samp,"Human"))
data=rbind(data,undersampler(animal,samp,"Animal"))
data=rbind(data,undersampler(bacteria,samp,"Bacteria"))
data=rbind(data,undersampler(plant,samp,"Plant"))
p4=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Transcriptomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Species/Kingdom')

ks_p_vals_4=c(prop.test(c(length(global[global<=0.025]), length(human[human<=0.025])), c(length(global[global<=0.05]), length(human[human<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(animal[animal<=0.025])), c(length(global[global<=0.05]), length(animal[animal<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(plant[plant<=0.025])), c(length(global[global<=0.05]), length(plant[plant<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(bacteria[bacteria<=0.025])), c(length(global[global<=0.05]), length(bacteria[bacteria<=0.05])))$p.value
)
ks_p_vals__species=cbind(ks_p_vals_1,ks_p_vals_2,ks_p_vals_3,ks_p_vals_4)
rownames(ks_p_vals__species)=c("Human","Animal","Plant","Bacteria")
colnames(ks_p_vals__species)=c("Genomics","Metabolomics","Proteomics","Transcriptomics")


mylegend=g_legend(p1)
png("species.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p1 + theme(legend.position="none"),
                         p2 + theme(legend.position="none"),
                         p3 + theme(legend.position="none"),
                         p4 + theme(legend.position="none"),
                         top="Density plot of p values by species/kingdom",
                         nrow=2),
             mylegend, nrow=2,heights=c(10, 1)))
dev.off()


#########3


results_group_1=metabolomics_scopus_data[grep('China',metabolomics_scopus_data$Affiliations),]
china=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('United States',metabolomics_scopus_data$Affiliations),]
us=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('United Kingdom',metabolomics_scopus_data$Affiliations),]
uk=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Germany',metabolomics_scopus_data$Affiliations),]
germany=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Japan',metabolomics_scopus_data$Affiliations),]
japan=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Netherlands',metabolomics_scopus_data$Affiliations),]
netherlands=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('France',metabolomics_scopus_data$Affiliations),]
france=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Canada',metabolomics_scopus_data$Affiliations),]
canada=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Spain',metabolomics_scopus_data$Affiliations),]
spain=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
results_group_1=metabolomics_scopus_data[grep('Italy',metabolomics_scopus_data$Affiliations),]
italy=allp$pvalue[allp$pmid %in% results_group_1$PubMed.ID[!is.na(results_group_1$PubMed.ID)]==T|allp$doi %in% results_group_1$DOI[!is.na(results_group_1$DOI)]]
global=allp$pvalue[allp$pmid %in% metabolomics_scopus_data$PubMed.ID[!is.na(metabolomics_scopus_data$PubMed.ID)]==T|allp$doi %in% metabolomics_scopus_data$DOI[!is.na(metabolomics_scopus_data$DOI)]]
samp=min(c(length(china),length(japan),length(germany),length(us),length(uk),
           length(spain),length(italy),length(france),length(netherlands),
           length(canada)))
ks_p_vals__country_met=c(prop.test(c(length(global[global<=0.025]), length(china[china<=0.025])), c(length(global[global<=0.05]), length(china[china<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(canada[canada<=0.025])), c(length(global[global<=0.05]), length(canada[canada<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(japan[japan<=0.025])), c(length(global[global<=0.05]), length(japan[japan<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(us[us<=0.025])), c(length(global[global<=0.05]), length(us[us<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(uk[uk<=0.025])), c(length(global[global<=0.05]), length(uk[uk<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(france[france<=0.025])), c(length(global[global<=0.05]), length(france[france<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(italy[italy<=0.025])), c(length(global[global<=0.05]), length(italy[italy<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(spain[spain<=0.025])), c(length(global[global<=0.05]), length(spain[spain<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(netherlands[netherlands<=0.025])), c(length(global[global<=0.05]), length(netherlands[netherlands<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(germany[germany<=0.025])), c(length(global[global<=0.05]), length(germany[germany<=0.05])))$p.value
)
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(china,samp,'China'))
data=rbind(data,undersampler(canada,samp,'Canada'))
data=rbind(data,undersampler(japan,samp,'Japan'))
data=rbind(data,undersampler(us,samp,'United States'))
p2=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Metabolomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(spain,samp,'Spain'))
data=rbind(data,undersampler(italy,samp,'Italy'))
data=rbind(data,undersampler(germany,samp,'Germany'))
data=rbind(data,undersampler(uk,samp,'United Kingdom'))
data=rbind(data,undersampler(france,samp,'France'))
data=rbind(data,undersampler(netherlands,samp,'Netherlands'))
p6=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Metabolomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')



germany_pubmed = read_csv("germany_genomics.csv")
germany=allp$pvalue[allp$pmid %in% germany_pubmed$EntrezUID | allp$doi %in% germany_pubmed$DOI]
global_pubmed = read_csv("genomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID| allp$doi %in% global_pubmed$DOI]
china_pubmed = read_csv("china_genomics.csv")
china=allp$pvalue[allp$pmid %in% china_pubmed$EntrezUID| allp$doi %in% china_pubmed$DOI]
us_pubmed = read_csv("us_genomics.csv")
us=allp$pvalue[allp$pmid %in% us_pubmed$EntrezUID| allp$doi %in% us_pubmed$DOI]
spain_pubmed = read_csv("spain_genomics.csv")
spain=allp$pvalue[allp$pmid %in% spain_pubmed$EntrezUID| allp$doi %in% spain_pubmed$DOI]
uk_pubmed = read_csv("uk_genomics.csv")
uk=allp$pvalue[allp$pmid %in% uk_pubmed$EntrezUID| allp$doi %in% uk_pubmed$DOI]
france_pubmed = read_csv("france_genomics.csv")
france=allp$pvalue[allp$pmid %in% france_pubmed$EntrezUID | allp$doi %in% france_pubmed$DOI]
italy_pubmed = read_csv("italy_genomics.csv")
italy=allp$pvalue[allp$pmid %in% italy_pubmed$EntrezUID| allp$doi %in% italy_pubmed$DOI]
japan_pubmed = read_csv("japan_genomics.csv")
japan=allp$pvalue[allp$pmid %in% japan_pubmed$EntrezUID| allp$doi %in% japan_pubmed$DOI]
netherlands_pubmed = read_csv("netherlands_genomics.csv")
netherlands=allp$pvalue[allp$pmid %in% netherlands_pubmed$EntrezUID| allp$doi %in% netherlands_pubmed$DOI]
canada_pubmed = read_csv("canada_genomics.csv")
canada=allp$pvalue[allp$pmid %in% canada_pubmed$EntrezUID| allp$doi %in% canada_pubmed$DOI]
samp=min(c(length(china),length(japan),length(germany),length(us),length(uk),
length(spain),length(italy),length(france),length(netherlands),
length(canada)))
ks_p_vals__country_gen=c(prop.test(c(length(global[global<=0.025]), length(china[china<=0.025])), c(length(global[global<=0.05]), length(china[china<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(canada[canada<=0.025])), c(length(global[global<=0.05]), length(canada[canada<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(japan[japan<=0.025])), c(length(global[global<=0.05]), length(japan[japan<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(us[us<=0.025])), c(length(global[global<=0.05]), length(us[us<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(uk[uk<=0.025])), c(length(global[global<=0.05]), length(uk[uk<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(france[france<=0.025])), c(length(global[global<=0.05]), length(france[france<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(italy[italy<=0.025])), c(length(global[global<=0.05]), length(italy[italy<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(spain[spain<=0.025])), c(length(global[global<=0.05]), length(spain[spain<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(netherlands[netherlands<=0.025])), c(length(global[global<=0.05]), length(netherlands[netherlands<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(germany[germany<=0.025])), c(length(global[global<=0.05]), length(germany[germany<=0.05])))$p.value
)

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(china,samp,'China'))
data=rbind(data,undersampler(canada,samp,'Canada'))
data=rbind(data,undersampler(japan,samp,'Japan'))
data=rbind(data,undersampler(us,samp,'United States'))
p1=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Genomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(spain,samp,'Spain'))
data=rbind(data,undersampler(italy,samp,'Italy'))
data=rbind(data,undersampler(germany,samp,'Germany'))
data=rbind(data,undersampler(uk,samp,'United Kingdom'))
data=rbind(data,undersampler(france,samp,'France'))
data=rbind(data,undersampler(netherlands,samp,'Netherlands'))
p5=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Genomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')


germany_pubmed = read_csv("germany_proteomics.csv")
germany=allp$pvalue[allp$pmid %in% germany_pubmed$EntrezUID | allp$doi %in% germany_pubmed$DOI]
global_pubmed = read_csv("proteomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID| allp$doi %in% global_pubmed$DOI]
china_pubmed = read_csv("china_proteomics.csv")
china=allp$pvalue[allp$pmid %in% china_pubmed$EntrezUID| allp$doi %in% china_pubmed$DOI]
us_pubmed = read_csv("us_proteomics.csv")
us=allp$pvalue[allp$pmid %in% us_pubmed$EntrezUID| allp$doi %in% us_pubmed$DOI]
spain_pubmed = read_csv("spain_proteomics.csv")
spain=allp$pvalue[allp$pmid %in% spain_pubmed$EntrezUID| allp$doi %in% spain_pubmed$DOI]
uk_pubmed = read_csv("uk_proteomics.csv")
uk=allp$pvalue[allp$pmid %in% uk_pubmed$EntrezUID| allp$doi %in% uk_pubmed$DOI]
france_pubmed = read_csv("france_proteomics.csv")
france=allp$pvalue[allp$pmid %in% france_pubmed$EntrezUID | allp$doi %in% france_pubmed$DOI]
italy_pubmed = read_csv("italy_proteomics.csv")
italy=allp$pvalue[allp$pmid %in% italy_pubmed$EntrezUID| allp$doi %in% italy_pubmed$DOI]
japan_pubmed = read_csv("japan_proteomics.csv")
japan=allp$pvalue[allp$pmid %in% japan_pubmed$EntrezUID| allp$doi %in% japan_pubmed$DOI]
netherlands_pubmed = read_csv("netherlands_proteomics.csv")
netherlands=allp$pvalue[allp$pmid %in% netherlands_pubmed$EntrezUID| allp$doi %in% netherlands_pubmed$DOI]
canada_pubmed = read_csv("canada_proteomics.csv")
canada=allp$pvalue[allp$pmid %in% canada_pubmed$EntrezUID| allp$doi %in% canada_pubmed$DOI]
samp=min(c(length(china),length(japan),length(germany),length(us),length(uk),
           length(spain),length(italy),length(france),length(netherlands),
           length(canada)))

ks_p_vals__country_prot=c(prop.test(c(length(global[global<=0.025]), length(china[china<=0.025])), c(length(global[global<=0.05]), length(china[china<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(canada[canada<=0.025])), c(length(global[global<=0.05]), length(canada[canada<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(japan[japan<=0.025])), c(length(global[global<=0.05]), length(japan[japan<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(us[us<=0.025])), c(length(global[global<=0.05]), length(us[us<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(uk[uk<=0.025])), c(length(global[global<=0.05]), length(uk[uk<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(france[france<=0.025])), c(length(global[global<=0.05]), length(france[france<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(italy[italy<=0.025])), c(length(global[global<=0.05]), length(italy[italy<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(spain[spain<=0.025])), c(length(global[global<=0.05]), length(spain[spain<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(netherlands[netherlands<=0.025])), c(length(global[global<=0.05]), length(netherlands[netherlands<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(germany[germany<=0.025])), c(length(global[global<=0.05]), length(germany[germany<=0.05])))$p.value
)

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(china,samp,'China'))
data=rbind(data,undersampler(canada,samp,'Canada'))
data=rbind(data,undersampler(japan,samp,'Japan'))
data=rbind(data,undersampler(us,samp,'United States'))
p3=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Proteomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(spain,samp,'Spain'))
data=rbind(data,undersampler(italy,samp,'Italy'))
data=rbind(data,undersampler(germany,samp,'Germany'))
data=rbind(data,undersampler(uk,samp,'United Kingdom'))
data=rbind(data,undersampler(france,samp,'France'))
data=rbind(data,undersampler(netherlands,samp,'Netherlands'))
p7=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Proteomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')


germany_pubmed = read_csv("germany_transcriptomics.csv")
germany=allp$pvalue[allp$pmid %in% germany_pubmed$EntrezUID | allp$doi %in% germany_pubmed$DOI]
global_pubmed = read_csv("transcriptomics.csv")
global=allp$pvalue[allp$pmid %in% global_pubmed$EntrezUID| allp$doi %in% global_pubmed$DOI]
china_pubmed = read_csv("china_transcriptomics.csv")
china=allp$pvalue[allp$pmid %in% china_pubmed$EntrezUID| allp$doi %in% china_pubmed$DOI]
us_pubmed = read_csv("us_transcriptomics.csv")
us=allp$pvalue[allp$pmid %in% us_pubmed$EntrezUID| allp$doi %in% us_pubmed$DOI]
spain_pubmed = read_csv("spain_transcriptomics.csv")
spain=allp$pvalue[allp$pmid %in% spain_pubmed$EntrezUID| allp$doi %in% spain_pubmed$DOI]
uk_pubmed = read_csv("uk_transcriptomics.csv")
uk=allp$pvalue[allp$pmid %in% uk_pubmed$EntrezUID| allp$doi %in% uk_pubmed$DOI]
france_pubmed = read_csv("france_transcriptomics.csv")
france=allp$pvalue[allp$pmid %in% france_pubmed$EntrezUID | allp$doi %in% france_pubmed$DOI]
italy_pubmed = read_csv("italy_transcriptomics.csv")
italy=allp$pvalue[allp$pmid %in% italy_pubmed$EntrezUID| allp$doi %in% italy_pubmed$DOI]
japan_pubmed = read_csv("japan_transcriptomics.csv")
japan=allp$pvalue[allp$pmid %in% japan_pubmed$EntrezUID| allp$doi %in% japan_pubmed$DOI]
netherlands_pubmed = read_csv("netherlands_transcriptomics.csv")
netherlands=allp$pvalue[allp$pmid %in% netherlands_pubmed$EntrezUID| allp$doi %in% netherlands_pubmed$DOI]
canada_pubmed = read_csv("canada_transcriptomics.csv")
canada=allp$pvalue[allp$pmid %in% canada_pubmed$EntrezUID| allp$doi %in% canada_pubmed$DOI]
samp=min(c(length(china),length(japan),length(germany),length(us),length(uk),
           length(spain),length(italy),length(france),length(netherlands),
           length(canada)))

ks_p_vals__country_trans=c(prop.test(c(length(global[global<=0.025]), length(china[china<=0.025])), c(length(global[global<=0.05]), length(china[china<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(canada[canada<=0.025])), c(length(global[global<=0.05]), length(canada[canada<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(japan[japan<=0.025])), c(length(global[global<=0.05]), length(japan[japan<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(us[us<=0.025])), c(length(global[global<=0.05]), length(us[us<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(uk[uk<=0.025])), c(length(global[global<=0.05]), length(uk[uk<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(france[france<=0.025])), c(length(global[global<=0.05]), length(france[france<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(italy[italy<=0.025])), c(length(global[global<=0.05]), length(italy[italy<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(spain[spain<=0.025])), c(length(global[global<=0.05]), length(spain[spain<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(netherlands[netherlands<=0.025])), c(length(global[global<=0.05]), length(netherlands[netherlands<=0.05])))$p.value,
                           prop.test(c(length(global[global<=0.025]), length(germany[germany<=0.025])), c(length(global[global<=0.05]), length(germany[germany<=0.05])))$p.value
)

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(china,samp,'China'))
data=rbind(data,undersampler(canada,samp,'Canada'))
data=rbind(data,undersampler(japan,samp,'Japan'))
data=rbind(data,undersampler(us,samp,'United States'))
p4=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Transcriptomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')

data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(global,samp,'Global'))
data=rbind(data,undersampler(spain,samp,'Spain'))
data=rbind(data,undersampler(italy,samp,'Italy'))
data=rbind(data,undersampler(germany,samp,'Germany'))
data=rbind(data,undersampler(uk,samp,'United Kingdom'))
data=rbind(data,undersampler(france,samp,'France'))
data=rbind(data,undersampler(netherlands,samp,'Netherlands'))
p8=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Transcriptomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Country')



mylegend=g_legend(p1)

png("country1.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p1 + theme(legend.position="none"),
                         p2 + theme(legend.position="none"),
                         p3 + theme(legend.position="none"),
                         p4 + theme(legend.position="none"),
                         top="Density plot of p-values by country affiliation (non-European countries)",
                         nrow=2),
             mylegend, nrow=2,heights=c(10, 1)))
dev.off()


mylegend=g_legend(p5)

png("country2.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p5 + theme(legend.position="none"),
                              p6 + theme(legend.position="none"),
                              p7 + theme(legend.position="none"),
                              p8 + theme(legend.position="none"),
                              top="Density plot of p-values by country affiliation (European countries)",
                              nrow=2),
                  mylegend, nrow=2,heights=c(10, 1)))
dev.off()


ks_p_vals__country=cbind(ks_p_vals__country_gen,ks_p_vals__country_met,ks_p_vals__country_prot,ks_p_vals__country_trans)
rownames(ks_p_vals__country)=c("China","Canada","Japan","United States","United Kingdom","France","Italy", "Spain","Netherlands","Germany")
colnames(ks_p_vals__country)=c("Genomics","Metabolomics","Proteomics","Transcriptomics")




####
genomics_pubmed = read_csv("genomics.csv")
genomics=allp[allp$pmid %in% genomics_pubmed$EntrezUID | allp$doi %in% genomics_pubmed$DOI,]
genomics_2009=genomics$pvalue[genomics$year<=2010]
genomics_2010=genomics$pvalue[genomics$year==2010]
genomics_2011=genomics$pvalue[genomics$year==2011]
genomics_2012=genomics$pvalue[genomics$year==2012]
genomics_2013=genomics$pvalue[genomics$year==2013]
genomics_2014=genomics$pvalue[genomics$year>2013]
genomics=genomics$pvalue
samp=min(c(length(genomics_2009),length(genomics_2010),
           length(genomics_2011),length(genomics_2012),
           length(genomics_2013),length(genomics_2014)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(genomics_2009,samp,'<==2009'))
data=rbind(data,undersampler(genomics_2010,samp,'2010'))
data=rbind(data,undersampler(genomics_2011,samp,'2011'))
data=rbind(data,undersampler(genomics_2012,samp,'2012'))
data=rbind(data,undersampler(genomics_2013,samp,'2013'))
data=rbind(data,undersampler(genomics_2014,samp,'>=2014'))

p1=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Genomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Year')

metabolomics=allp[allp$pmid %in% metabolomics_scopus_data$PubMed.ID[!is.na(metabolomics_scopus_data$PubMed.ID)]==T|allp$doi %in% metabolomics_scopus_data$DOI[!is.na(metabolomics_scopus_data$DOI)],]
metabolomics_2009=metabolomics$pvalue[metabolomics$year<=2010]
metabolomics_2010=metabolomics$pvalue[metabolomics$year==2010]
metabolomics_2011=metabolomics$pvalue[metabolomics$year==2011]
metabolomics_2012=metabolomics$pvalue[metabolomics$year==2012]
metabolomics_2013=metabolomics$pvalue[metabolomics$year==2013]
metabolomics_2014=metabolomics$pvalue[metabolomics$year>2013]
metabolomics=metabolomics$pvalue
samp=min(c(length(metabolomics_2009),length(metabolomics_2010),
           length(metabolomics_2011),length(metabolomics_2012),
           length(metabolomics_2013),length(metabolomics_2014)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(metabolomics_2009,samp,'<==2009'))
data=rbind(data,undersampler(metabolomics_2010,samp,'2010'))
data=rbind(data,undersampler(metabolomics_2011,samp,'2011'))
data=rbind(data,undersampler(metabolomics_2012,samp,'2012'))
data=rbind(data,undersampler(metabolomics_2013,samp,'2013'))
data=rbind(data,undersampler(metabolomics_2014,samp,'>=2014'))

p2=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Metabolomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Year')

proteomics_pubmed = read_csv("proteomics.csv")
proteomics=allp[allp$pmid %in% proteomics_pubmed$EntrezUID | allp$doi %in% proteomics_pubmed$DOI,]
proteomics_2009=proteomics$pvalue[proteomics$year<=2010]
proteomics_2010=proteomics$pvalue[proteomics$year==2010]
proteomics_2011=proteomics$pvalue[proteomics$year==2011]
proteomics_2012=proteomics$pvalue[proteomics$year==2012]
proteomics_2013=proteomics$pvalue[proteomics$year==2013]
proteomics_2014=proteomics$pvalue[proteomics$year>2013]
proteomics=proteomics$pvalue

samp=min(c(length(proteomics_2009),length(proteomics_2010),
           length(proteomics_2011),length(proteomics_2012),
           length(proteomics_2013),length(proteomics_2014)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(proteomics_2009,samp,'<==2009'))
data=rbind(data,undersampler(proteomics_2010,samp,'2010'))
data=rbind(data,undersampler(proteomics_2011,samp,'2011'))
data=rbind(data,undersampler(proteomics_2012,samp,'2012'))
data=rbind(data,undersampler(proteomics_2013,samp,'2013'))
data=rbind(data,undersampler(proteomics_2014,samp,'>=2014'))

p3=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Proteomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Year')

transcriptomics_pubmed = read_csv("transcriptomics.csv")
transcriptomics=allp[allp$pmid %in% transcriptomics_pubmed$EntrezUID | allp$doi %in% transcriptomics_pubmed$DOI,]
transcriptomics_2009=transcriptomics$pvalue[transcriptomics$year<=2010]
transcriptomics_2010=transcriptomics$pvalue[transcriptomics$year==2010]
transcriptomics_2011=transcriptomics$pvalue[transcriptomics$year==2011]
transcriptomics_2012=transcriptomics$pvalue[transcriptomics$year==2012]
transcriptomics_2013=transcriptomics$pvalue[transcriptomics$year==2013]
transcriptomics_2014=transcriptomics$pvalue[transcriptomics$year>2013]
transcriptomics=transcriptomics$pvalue

samp=min(c(length(transcriptomics_2009),length(transcriptomics_2010),
           length(transcriptomics_2011),length(transcriptomics_2012),
           length(transcriptomics_2013),length(transcriptomics_2014)))
data = data.frame(y=c(),x=c(),z=c())
data=rbind(data,undersampler(transcriptomics_2009,samp,'<==2009'))
data=rbind(data,undersampler(transcriptomics_2010,samp,'2010'))
data=rbind(data,undersampler(transcriptomics_2011,samp,'2011'))
data=rbind(data,undersampler(transcriptomics_2012,samp,'2012'))
data=rbind(data,undersampler(transcriptomics_2013,samp,'2013'))
data=rbind(data,undersampler(transcriptomics_2014,samp,'>=2014'))

p4=ggplot(data=data, aes(x=x, y=y,group=z,colour=z))+
  geom_line(size=1.2)+ ggtitle("Transcriptomics") +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
  labs(x = "p-value",y='Density',colour='Year')

mylegend=g_legend(p1)
png("year.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p1 + theme(legend.position="none"),
                         p2 + theme(legend.position="none"),
                         p3 + theme(legend.position="none"),
                         p4 + theme(legend.position="none"),
                         top='Density plot of p values by publication year',
                         nrow=2),
             mylegend, nrow=2,heights=c(10, 1)))
dev.off()


ks_p_vals__year=data.frame(Genomics=c(prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2009[genomics_2009<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2009[genomics_2009<=0.05])))$p.value,
                           prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2010[genomics_2010<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2010[genomics_2010<=0.05])))$p.value,
                           prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2011[genomics_2011<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2011[genomics_2011<=0.05])))$p.value,
                           prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2012[genomics_2012<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2012[genomics_2012<=0.05])))$p.value,
                           prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2013[genomics_2013<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2013[genomics_2013<=0.05])))$p.value,
                           prop.test(c(length(genomics[genomics<=0.025]), length(genomics_2014[genomics_2014<=0.025])), c(length(genomics[genomics<=0.05]), length(genomics_2014[genomics_2014<=0.05])))$p.value),
                     Metabolomics=c(prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2009[metabolomics_2009<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2009[metabolomics_2009<=0.05])))$p.value,
                           prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2010[metabolomics_2010<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2010[metabolomics_2010<=0.05])))$p.value,
                           prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2011[metabolomics_2011<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2011[metabolomics_2011<=0.05])))$p.value,
                           prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2012[metabolomics_2012<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2012[metabolomics_2012<=0.05])))$p.value,
                           prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2013[metabolomics_2013<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2013[metabolomics_2013<=0.05])))$p.value,
                           prop.test(c(length(metabolomics[metabolomics<=0.025]), length(metabolomics_2014[metabolomics_2014<=0.025])), c(length(metabolomics[metabolomics<=0.05]), length(metabolomics_2014[metabolomics_2014<=0.05])))$p.value),
                     Proteomics=c(prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2009[proteomics_2009<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2009[proteomics_2009<=0.05])))$p.value,
                           prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2010[proteomics_2010<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2010[proteomics_2010<=0.05])))$p.value,
                           prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2011[proteomics_2011<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2011[proteomics_2011<=0.05])))$p.value,
                           prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2012[proteomics_2012<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2012[proteomics_2012<=0.05])))$p.value,
                           prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2013[proteomics_2013<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2013[proteomics_2013<=0.05])))$p.value,
                           prop.test(c(length(proteomics[proteomics<=0.025]), length(proteomics_2014[proteomics_2014<=0.025])), c(length(proteomics[proteomics<=0.05]), length(proteomics_2014[proteomics_2014<=0.05])))$p.value),
                      Transcriptomics=c(prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2009[transcriptomics_2009<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2009[transcriptomics_2009<=0.05])))$p.value,
                           prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2010[transcriptomics_2010<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2010[transcriptomics_2010<=0.05])))$p.value,
                           prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2011[transcriptomics_2011<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2011[transcriptomics_2011<=0.05])))$p.value,
                           prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2012[transcriptomics_2012<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2012[transcriptomics_2012<=0.05])))$p.value,
                           prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2013[transcriptomics_2013<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2013[transcriptomics_2013<=0.05])))$p.value,
                           prop.test(c(length(transcriptomics[transcriptomics<=0.025]), length(transcriptomics_2014[transcriptomics_2014<=0.025])), c(length(transcriptomics[transcriptomics<=0.05]), length(transcriptomics_2014[transcriptomics_2014<=0.05])))$p.value))


rownames(ks_p_vals__year)=c('<==2009',"2010",
                      "2011","2012",
                      "2013",">=2014")


######

ks_citation=matrix(NA,6,4)
ks_if=matrix(NA,6,4)

dat=rbind(data.frame(read_csv("genomics_scopus_1.csv")),data.frame(read_csv("genomics_scopus_2.csv")))
dat=dat[!duplicated(dat),]
cit0 = data.frame(read_csv("genomics_citation_1.csv"))[-c(1:6),]
cit00 = data.frame(read_csv("genomics_citation_2.csv"))[-c(1:6),]
cit0=cit0[,c(1:7,ncol(cit0))]
cit00=cit00[,c(1:7,ncol(cit00))]
colnames(cit0)[c(2,8)]=colnames(cit00)[c(2,8)]=c('Title','Citation')
cit=rbind(cit0,cit00)
cit=cit[!duplicated(cit),]
genomics=merge(cit,dat,by='Title')
genomics$Citation=as.numeric(as.character(genomics$Citation))
dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2$citation=rep(NA,nrow(dat2))
for (i in seq(nrow(dat2))) {
  lol=c(which(genomics$DOI==dat2$doi[i]),which(genomics$PubMed.ID==dat2$pmid[i]))
  if (length(lol)>0) dat2$citation[i]=genomics$Citation[lol]
}
dat2=dat2[!is.na(dat2$citation),]
dat2$citation=as.numeric(as.character(dat2$citation))
first_quartile_citation=dat2[order(dat2$citation,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]


dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2=dat2[dat2$journal %in% journal_if_information$ABBREV,]
dat2$IF=rep(NA,nrow(dat2))
journal_if_information$meanIF=rowMeans(apply(journal_if_information[,4:9],2,as.numeric),na.rm=T)
# journal_if_information$`2013/2014`=as.numeric(as.character(journal_if_information$`2013/2014`))
for (i in seq(nrow(dat2))) {
  lol=which(journal_if_information$JOURNAL==dat2$journal[i])
  if (length(lol)>0) dat2$IF[i]=journal_if_information$meanIF[lol]
}
dat2=dat2[!is.na(dat2$IF),]
dat2$IF=as.numeric(as.character(dat2$IF))

first_quartile_if=dat2[order(dat2$IF,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]

ks_citation[,1]=c(prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(second_quartile_citation[second_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(second_quartile_citation[second_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_citation[third_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(third_quartile_citation[third_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value)
ks_if[,1]=c(prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(second_quartile_if[second_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(second_quartile_if[second_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_if[third_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(third_quartile_if[third_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value)



data = data.frame(p_value=c(first_quartile_citation$pvalue,
                            second_quartile_citation$pvalue,
                            third_quartile_citation$pvalue,
                            fourth_quartile_citation$pvalue))
data$citation=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                         c(nrow(first_quartile_citation),nrow(second_quartile_citation),nrow(third_quartile_citation),nrow(fourth_quartile_citation))))
p1=ggplot(data,aes(x=p_value, color=citation)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Citation count - Genomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))

data = data.frame(p_value=c(first_quartile_if$pvalue,
                            second_quartile_if$pvalue,
                            third_quartile_if$pvalue,
                            fourth_quartile_if$pvalue))
data$IF=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                   c(nrow(first_quartile_if),nrow(second_quartile_if),nrow(third_quartile_if),nrow(fourth_quartile_if))))

p2=ggplot(data,aes(x=p_value, color=IF)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Journal IF - Genomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))


###



dat=data.frame(read_csv("metabolomics_scopus.csv"))
cit0 = data.frame(read_csv("metabolomics_citation.csv"))[-c(1:6),]
cit0=cit0[,c(1:7,ncol(cit0))]
colnames(cit0)[c(2,8)]=c('Title','Citation')
cit=cit0
cit=cit[!duplicated(cit),]
metabolomics=merge(cit,dat,by='Title')
metabolomics$Citation=as.numeric(as.character(metabolomics$Citation))
dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2$citation=rep(NA,nrow(dat2))
for (i in seq(nrow(dat2))) {
  lol=c(which(metabolomics$DOI==dat2$doi[i]),which(metabolomics$PubMed.ID==dat2$pmid[i]))
  if (length(lol)>0) dat2$citation[i]=metabolomics$Citation[lol]
}
dat2=dat2[!is.na(dat2$citation),]
dat2$citation=as.numeric(as.character(dat2$citation))
first_quartile_citation=dat2[order(dat2$citation,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]

dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2=dat2[dat2$journal %in% journal_if_information$ABBREV,]
dat2$IF=rep(NA,nrow(dat2))
journal_if_information$meanIF=rowMeans(apply(journal_if_information[,4:9],2,as.numeric),na.rm=T)
# journal_if_information$`2013/2014`=as.numeric(as.character(journal_if_information$`2013/2014`))
for (i in seq(nrow(dat2))) {
  lol=which(journal_if_information$JOURNAL==dat2$journal[i])
  if (length(lol)>0) dat2$IF[i]=journal_if_information$meanIF[lol]
}
dat2=dat2[!is.na(dat2$IF),]
dat2$IF=as.numeric(as.character(dat2$IF))

first_quartile_if=dat2[order(dat2$IF,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]


ks_citation[,2]=c(prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(second_quartile_citation[second_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(second_quartile_citation[second_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_citation[third_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(third_quartile_citation[third_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value)
ks_if[,2]=c(prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(second_quartile_if[second_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(second_quartile_if[second_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_if[third_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(third_quartile_if[third_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value)


data = data.frame(p_value=c(first_quartile_citation$pvalue,
                            second_quartile_citation$pvalue,
                            third_quartile_citation$pvalue,
                            fourth_quartile_citation$pvalue))

data$citation=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                         c(nrow(first_quartile_citation),nrow(second_quartile_citation),nrow(third_quartile_citation),nrow(fourth_quartile_citation))))
p3=ggplot(data,aes(x=p_value, color=citation)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Citation count - Metabolomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))

  data = data.frame(p_value=c(first_quartile_if$pvalue,
                            second_quartile_if$pvalue,
                            third_quartile_if$pvalue,
                            fourth_quartile_if$pvalue))
data$IF=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                   c(nrow(first_quartile_if),nrow(second_quartile_if),nrow(third_quartile_if),nrow(fourth_quartile_if))))
p4=ggplot(data,aes(x=p_value, color=IF)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Journal IF - Metabolomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))



####??



dat=rbind(data.frame(read_csv("proteomics_scopus_1.csv")),data.frame(read_csv("proteomics_scopus_2.csv")))
dat=dat[!duplicated(dat),]
cit0 = data.frame(read_csv("proteomics_citation_1.csv"))[-c(1:6),]
cit00 = data.frame(read_csv("proteomics_citation_2.csv"))[-c(1:6),]
cit0=cit0[,c(1:7,ncol(cit0))]
cit00=cit00[,c(1:7,ncol(cit00))]
colnames(cit0)[c(2,8)]=colnames(cit00)[c(2,8)]=c('Title','Citation')
cit=rbind(cit0,cit00)
cit=cit[!duplicated(cit),]
proteomics=merge(cit,dat,by='Title')
proteomics$Citation=as.numeric(as.character(proteomics$Citation))
dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2$citation=rep(NA,nrow(dat2))
for (i in seq(nrow(dat2))) {
  lol=c(which(proteomics$DOI==dat2$doi[i]),which(proteomics$PubMed.ID==dat2$pmid[i]))
  if (length(lol)>0) dat2$citation[i]=proteomics$Citation[lol]
}
dat2=dat2[!is.na(dat2$citation),]
dat2$citation=as.numeric(as.character(dat2$citation))
first_quartile_citation=dat2[order(dat2$citation,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]
dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2=dat2[dat2$journal %in% journal_if_information$ABBREV,]
dat2$IF=rep(NA,nrow(dat2))
journal_if_information$meanIF=rowMeans(apply(journal_if_information[,4:9],2,as.numeric),na.rm=T)
# journal_if_information$`2013/2014`=as.numeric(as.character(journal_if_information$`2013/2014`))
for (i in seq(nrow(dat2))) {
  lol=which(journal_if_information$JOURNAL==dat2$journal[i])
  if (length(lol)>0) dat2$IF[i]=journal_if_information$meanIF[lol]
}
dat2=dat2[!is.na(dat2$IF),]
dat2$IF=as.numeric(as.character(dat2$IF))

first_quartile_if=dat2[order(dat2$IF,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]

ks_citation[,3]=c(prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(second_quartile_citation[second_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(second_quartile_citation[second_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_citation[third_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(third_quartile_citation[third_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value)
ks_if[,3]=c(prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(second_quartile_if[second_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(second_quartile_if[second_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_if[third_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(third_quartile_if[third_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value)

data = data.frame(p_value=c(first_quartile_citation$pvalue,
                            second_quartile_citation$pvalue,
                            third_quartile_citation$pvalue,
                            fourth_quartile_citation$pvalue))
data$citation=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                         c(nrow(first_quartile_citation),nrow(second_quartile_citation),nrow(third_quartile_citation),nrow(fourth_quartile_citation))))
p5=ggplot(data,aes(x=p_value, color=citation)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Citation count - Proteomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))


data = data.frame(p_value=c(first_quartile_if$pvalue,
                            second_quartile_if$pvalue,
                            third_quartile_if$pvalue,
                            fourth_quartile_if$pvalue))
data$IF=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                   c(nrow(first_quartile_if),nrow(second_quartile_if),nrow(third_quartile_if),nrow(fourth_quartile_if))))
p6=ggplot(data,aes(x=p_value, color=IF)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Journal IF - Proteomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))

##



dat=rbind(data.frame(read_csv("transcriptomics_scopus_1.csv")),data.frame(read_csv("transcriptomics_scopus_2.csv")))
dat=dat[!duplicated(dat),]
cit0 = data.frame(read_csv("transcriptomics_citation_1.csv"))[-c(1:6),]
cit00 = data.frame(read_csv("transcriptomics_citation_2.csv"))[-c(1:6),]
cit0=cit0[,c(1:7,ncol(cit0))]
cit00=cit00[,c(1:7,ncol(cit00))]
colnames(cit0)[c(2,8)]=colnames(cit00)[c(2,8)]=c('Title','Citation')
cit=rbind(cit0,cit00)
cit=cit[!duplicated(cit),]
transcriptomics=merge(cit,dat,by='Title')
transcriptomics$Citation=as.numeric(as.character(transcriptomics$Citation))
dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2$citation=rep(NA,nrow(dat2))
for (i in seq(nrow(dat2))) {
  lol=c(which(transcriptomics$DOI==dat2$doi[i]),which(transcriptomics$PubMed.ID==dat2$pmid[i]))
  if (length(lol)>0) dat2$citation[i]=transcriptomics$Citation[lol]
}
dat2=dat2[!is.na(dat2$citation),]
dat2$citation=as.numeric(as.character(dat2$citation))
first_quartile_citation=dat2[order(dat2$citation,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_citation=dat2[order(dat2$citation,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]
data = data.frame(p_value=c(first_quartile_citation$pvalue,
                            second_quartile_citation$pvalue,
                            third_quartile_citation$pvalue,
                            fourth_quartile_citation$pvalue))
data$citation=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                         c(nrow(first_quartile_citation),nrow(second_quartile_citation),nrow(third_quartile_citation),nrow(fourth_quartile_citation))))
p7=ggplot(data,aes(x=p_value, color=citation)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Citation count - transcriptomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))


dat2=allp[allp$doi %in% dat$DOI|allp$pmid %in% dat$PubMed.ID,]
dat2=dat2[dat2$journal %in% journal_if_information$ABBREV,]
dat2$IF=rep(NA,nrow(dat2))
journal_if_information$meanIF=rowMeans(apply(journal_if_information[,4:9],2,as.numeric),na.rm=T)
# journal_if_information$`2013/2014`=as.numeric(as.character(journal_if_information$`2013/2014`))
for (i in seq(nrow(dat2))) {
  lol=which(journal_if_information$JOURNAL==dat2$journal[i])
  if (length(lol)>0) dat2$IF[i]=journal_if_information$meanIF[lol]
}
dat2=dat2[!is.na(dat2$IF),]
dat2$IF=as.numeric(as.character(dat2$IF))

first_quartile_if=dat2[order(dat2$IF,decreasing=T)[1:round(1*nrow(dat2)/4)],]
second_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(1*nrow(dat2)/4+1):round(2*nrow(dat2)/4)],]
third_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(2*nrow(dat2)/4+1):round(3*nrow(dat2)/4)],]
fourth_quartile_if=dat2[order(dat2$IF,decreasing=T)[round(3*nrow(dat2)/4+1):nrow(dat2)],]
data = data.frame(p_value=c(first_quartile_if$pvalue,
                            second_quartile_if$pvalue,
                            third_quartile_if$pvalue,
                            fourth_quartile_if$pvalue))
data$IF=factor(rep(c("1st quartile","2nd quartile","3rd quartile","4th quartile"),
                   c(nrow(first_quartile_if),nrow(second_quartile_if),nrow(third_quartile_if),nrow(fourth_quartile_if))))
p8=ggplot(data,aes(x=p_value, color=IF)) +  geom_density(alpha=0.3,size=1.2) +
  ggtitle("Journal IF - transcriptomics") +
  scale_x_continuous(limits = c(0, 0.06)) +
  theme_bw() + theme(legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))


ks_citation[,4]=c(prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(second_quartile_citation[second_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(second_quartile_citation[second_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_citation[first_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(first_quartile_citation[first_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(third_quartile_citation[third_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(third_quartile_citation[third_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_citation[second_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(second_quartile_citation[second_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_citation[third_quartile_citation<=0.025]), length(fourth_quartile_citation[fourth_quartile_citation<=0.025])), c(length(third_quartile_citation[third_quartile_citation<=0.05]), length(fourth_quartile_citation[fourth_quartile_citation<=0.05])))$p.value)
ks_if[,4]=c(prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(second_quartile_if[second_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(second_quartile_if[second_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(first_quartile_if[first_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(first_quartile_if[first_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(third_quartile_if[third_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(third_quartile_if[third_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(second_quartile_if[second_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(second_quartile_if[second_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value,
                                prop.test(c(length(third_quartile_if[third_quartile_if<=0.025]), length(fourth_quartile_if[fourth_quartile_if<=0.025])), c(length(third_quartile_if[third_quartile_if<=0.05]), length(fourth_quartile_if[fourth_quartile_if<=0.05])))$p.value)



pp=p1+ theme(legend.title=element_blank())
mylegend=g_legend(pp)
png("citation_if.png", width = 760, height = 900)
grid.newpage();grid.draw(grid.arrange(arrangeGrob(p1 + theme(legend.position="none"),
                              p2 + theme(legend.position="none"),
                              p3 + theme(legend.position="none"),
                              p4 + theme(legend.position="none"),
                              p5 + theme(legend.position="none"),
                              p6 + theme(legend.position="none"),
                              p7 + theme(legend.position="none"),
                              p8 + theme(legend.position="none"),
                              nrow=4,top="Density plot of p-values by citation and journal IF"),
                  mylegend, nrow=2,heights=c(10, 1)))
dev.off()

rownames(ks_citation)=rownames(ks_if)=c('1st vs 2nd','1st vs 3rd','1st vs 4th',
                                        '2nd vs 3rd','2nd vs 4th','3rd vs 4th')
colnames(ks_citation)=colnames(ks_if)=c('Genomics',"Metabolomics","Proteomics",
                                        "Transcriptomics")
options("scipen"=-100, "digits"=4)


deep=p.adjust(c(as.matrix(ks_p_vals__factors),as.matrix(ks_p_vals__species),as.matrix(ks_p_vals__country),as.matrix(ks_p_vals__field), as.matrix(ks_p_vals__year),as.matrix(ks_citation),as.matrix(ks_if)),method='BH')

ks_p_vals__factors[]=deep[1:6]
ks_p_vals__species[,]=matrix(deep[7:22],4,4)
ks_p_vals__country[,]=matrix(deep[23:62],10,4)
ks_p_vals__field[,]=deep[63:68]
ks_p_vals__year[,]=matrix(deep[69:92],6,4)
ks_citation[,]=matrix(deep[93:116],6,4)
ks_if[,]=matrix(deep[117:140],6,4)
write.csv(ks_p_vals__factors,file='ks_factors.csv')
write.csv(ks_p_vals__species,file='ks_species.csv')
write.csv(ks_p_vals__country,file='ks_country.csv')
write.csv(ks_p_vals__field,file='ks_field.csv')
write.csv(ks_p_vals__year,file='ks_year.csv')
write.csv(ks_citation,file='ks_citation.csv')
write.csv(ks_if,file='ks_if.csv')
