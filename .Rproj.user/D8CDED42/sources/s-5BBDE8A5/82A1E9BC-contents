acv=profiling_names_corrected$final_output$shift[,!is.na(profiling_names_corrected$final_output$shift[1,])]
acv2=rf_pred_prova(acv)

fitControl <- trainControl(## 10-fold CV
  method = "repeatedcv",
  number = 10,
  ## repeated ten times
  repeats = 10)
 
  set.seed(825)
  colnames(acv)=paste("V",seq(ncol(acv)),sep="_")
gbmFit1 <- train(V_13 ~ ., data = acv, 
                 method = "rf", 
                 trControl = fitControl,
                 ## This last option is actually one
                 ## for gbm() that passes through
                 verbose = FALSE)
gbmFit1


predicted_shift=SATIN_improvement$predicted_shift
predicted_width=SATIN_improvement$predicted_width
predicted_width[,apply(predicted_width,2,function(x)length(unique(x)))==1]=NA
predicted_intensity=SATIN_improvement$predicted_intensity

ind=c(which(SATIN_initial$ROI_data[,5]==0),grep('Sum',SATIN_initial$ROI_data[,3]))
dades=SATIN_improvement$max_shift[,-ind]-SATIN_improvement$min_shift[,-ind]
lol=as.vector(diff(apply(SATIN_improvement$final_output$shift[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades2=t(replicate(146,lol))
dades3=(SATIN_improvement$max_width[,-ind]-SATIN_improvement$min_width[,-ind])/SATIN_improvement$predicted_width[,-ind]
lol=as.vector(diff(apply(SATIN_improvement$final_output$half_band_width[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades4=t(replicate(146,lol))/apply(SATIN_improvement$final_output$half_band_width[,-ind],2,function(x)median(x,na.rm=T))
dades5=100*SATIN_improvement$max_intensity[,-ind]-SATIN_improvement$min_intensity[,-ind]/SATIN_improvement$predicted_intensity[,-ind]
lol=as.vector(diff(apply(SATIN_improvement$final_output$intensity[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades6=100*t(replicate(146,lol))/apply(SATIN_improvement$final_output$intensity[,-ind],2,function(x)median(x,na.rm=T))
sed=c(which(apply(dades,2,function(x)(all(is.na(x))))==T),which(apply(dades2,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
  dades=dades[,-sed]
  dades2=dades2[,-sed]
}
sed=c(which(apply(dades3,2,function(x)(all(is.na(x))))==T),which(apply(dades4,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
  dades3=dades3[,-sed]
  dades4=dades4[,-sed]
}
sed=c(which(apply(dades5,2,function(x)(all(is.na(x))))==T),which(apply(dades6,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
  dades5=dades5[,-sed]
  dades6=dades6[,-sed]
}
