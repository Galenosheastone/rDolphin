lol=as.vector(diff(apply(millorat_cow_7$final_output$shift[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades2=t(replicate(146,lol))
dades3=(millorat_cow_7$max_width[,-ind]-millorat_cow_7$min_width[,-ind])/millorat_cow_7$predicted_width[,-ind]
lol=as.vector(diff(apply(millorat_cow_7$final_output$half_band_width[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades4=t(replicate(146,lol))/apply(millorat_cow_7$final_output$half_band_width[,-ind],2,function(x)median(x,na.rm=T))
dades5=100*millorat_cow_7$max_intensity[,-ind]-millorat_cow_7$min_intensity[,-ind]/millorat_cow_7$predicted_intensity[,-ind]
lol=as.vector(diff(apply(millorat_cow_7$final_output$intensity[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades6=100*t(replicate(146,lol))/apply(millorat_cow_7$final_output$intensity[,-ind],2,function(x)median(x,na.rm=T))
sed=c(which(apply(dades,2,function(x)(all(is.na(x))))==T),which(apply(dades2,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades=dades[,-sed]
dades2=dades2[,-sed]
}
sed=c(which(apply(dades3,2,function(x)(all(is.na(x))))==T),which(apply(dades4,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades3=dades3[,-sed]
dades4=dades4[,-sed]
}
sed=c(which(apply(dades5,2,function(x)(all(is.na(x))))==T),which(apply(dades6,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades5=dades5[,-sed]
dades6=dades6[,-sed]
}
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades2),length(dades))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades2,dades),metadata=metadata)
p10 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin()+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
scale_y_continuous(limits=c(0,0.01))+
labs(title='Chemical shift',
y="ppm",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades4),length(dades3))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades4,dades3),metadata=metadata)
p11 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin()+
scale_y_continuous(limits=c(0,0.8))+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
labs(title='Half bandwidth',y='% of median half bandwidth',x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades6),length(dades5))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades6,dades5),metadata=metadata)
p12 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin()+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
scale_y_continuous(limits=c(0,300))+
labs(title='Intensity',
y="% of median intensity",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
predicted_shift_2=millorat$predicted_shift
predicted_width_2=millorat$predicted_width
predicted_width_2[,apply(predicted_width_2,2,function(x)length(unique(x)))==1]=NA
predicted_intensity_2=millorat$predicted_intensity
ind=c(which(ab$ROI_data[,5]==0),grep('Sum',ab$ROI_data[,3]))
dades7=millorat$max_shift[,-ind]-millorat$min_shift[,-ind]
lol=as.vector(diff(apply(millorat$final_output$shift[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades8=t(replicate(146,lol))
dades9=(millorat$max_width[,-ind]-millorat$min_width[,-ind])/millorat$predicted_width[,-ind]
lol=as.vector(diff(apply(millorat$final_output$half_band_width[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades10=t(replicate(146,lol))/apply(millorat$final_output$half_band_width[,-ind],2,function(x)median(x,na.rm=T))
dades11=100*millorat$max_intensity[,-ind]-millorat$min_intensity[,-ind]/millorat$predicted_intensity[,-ind]
lol=as.vector(diff(apply(millorat$final_output$intensity[,-ind],2,function(x)quantile(x,c(0.025,0.975)))))
dades12=100*t(replicate(146,lol))/apply(millorat$final_output$intensity[,-ind],2,function(x)median(x,na.rm=T))
sed=c(which(apply(dades7,2,function(x)(all(is.na(x))))==T),which(apply(dades8,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades7=dades7[,-sed]
dades8=dades8[,-sed]
}
sed=c(which(apply(dades9,2,function(x)(all(is.na(x))))==T),which(apply(dades10,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades9=dades9[,-sed]
dades10=dades10[,-sed]
}
sed=c(which(apply(dades11,2,function(x)(all(is.na(x))))==T),which(apply(dades12,2,function(x)(all(is.na(x))))==T))
if (length(sed)>0) {
dades11=dades11[,-sed]
dades12=dades12[,-sed]
}
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades8),length(dades7))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades8,dades7),metadata=metadata)
p13 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin(alpha=0.5)+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
scale_y_continuous(limits=c(0,0.01))+
labs(title='Chemical shift',
y="ppm",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades10),length(dades9))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades10,dades9),metadata=metadata)
p14 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin(alpha=0.5)+
scale_y_continuous(limits=c(0,0.8))+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
labs(title='Half bandwidth',y='% of median half bandwidth',x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
metadata=factor(rep(c("Original CIs","Calculated CIs"),c(length(dades12),length(dades11))),levels =c("Original CIs","Calculated CIs") )
data=data.frame(shift=c(dades12,dades11),metadata=metadata)
p15 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
geom_violin(alpha=0.5)+
scale_fill_manual(values=c("Original CIs"="yellow","Calculated CIs"="red")) +
scale_y_continuous(limits=c(0,300))+
labs(title='Intensity',
y="% of median intensity",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p16 <- grid.arrange(arrangeGrob(p10 ,p11,p12,nrow=1))
p17 <- grid.arrange(arrangeGrob(p13,p14,p15,nrow=1))
p18 <- grid.arrange(arrangeGrob(p16,p17,nrow=2))
g_legend=function(a.gplot){
tmp = ggplot_gtable(ggplot_build(a.gplot))
leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend = tmp$grobs[[leg]]
return(legend)}
mylegend=g_legend(p10)
p16 <- grid.arrange(arrangeGrob(p10+theme(legend.position = 'none'),
p11+theme(legend.position = 'none'),
p12+theme(legend.position = 'none'),
top=textGrob('Faecal extract dataset',gp=gpar(fontsize=14,fontface='bold')),nrow=1) )
p17 <- grid.arrange(arrangeGrob(p13+theme(legend.position = 'none'),
p14+theme(legend.position = 'none'),
p15+theme(legend.position = 'none'),
top=textGrob('Serum dataset',gp=gpar(fontsize=14,fontface='bold')),nrow=1) )
p18 <- grid.arrange(arrangeGrob(p16,p17,
nrow=1),
mylegend, heights=c(10, 1))
g_legend=function(a.gplot){
tmp = ggplot_gtable(ggplot_build(a.gplot))
leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend = tmp$grobs[[leg]]
return(legend)}
mylegend=g_legend(p10)
p16 <- grid.arrange(arrangeGrob(p10+theme(legend.position = 'none'),
p11+theme(legend.position = 'none'),
p12+theme(legend.position = 'none'),
top=textGrob('Faecal extract dataset',gp=gpar(fontsize=14,fontface='bold')),nrow=1) )
p17 <- grid.arrange(arrangeGrob(p13+theme(legend.position = 'none'),
p14+theme(legend.position = 'none'),
p15+theme(legend.position = 'none'),
top=textGrob('Serum dataset',gp=gpar(fontsize=14,fontface='bold')),nrow=1) )
p18 <- grid.arrange(arrangeGrob(p16,p17,
nrow=2),
mylegend, heights=c(10, 1))
median(dades)
median(dades)/median(dades2)-1
median(dades2)
median(dades3)/median(dades4)-1
median(dades3)
median(dades7)
median(dades8)
median(dades7)/median(dades8)-1
median(dades4)
median(dades3)/median(dades4)-1
median(dades9)
median(dades10)
median(dades9)/median(dades10)-1
median(dades5)
median(dades6)-1
median(dades5)/median(dades6)-1
median(dades11)
median(dades12)
median(dades11)/median(dades12)-1
acv=profiling_names_corrected$final_output$shift[,!is.na(profiling_names_corrected$final_output$shift[1,])]
acv2=rf_pred_prova(acv)
acv=profiling_names_corrected$final_output$intensity[,!is.na(profiling_names_corrected$final_output$intensity[1,])]
acv2=rf_pred_prova(acv)
j=16
df <- data.frame(y= acv[,j], y.hat= acv2$predicted_matrix[,j],
min.se=acv2$lower_bound_matrix[,j],
max.se=acv2$upper_bound_matrix[,j])
p1 <- ggplot(df, aes(x = y, y = y.hat)) +
geom_errorbar(aes(ymin=min.se, ymax=max.se), width=.00001) +
geom_point() +
geom_abline(intercept=0, slope=1, linetype=2) +
xlab("Obtained chemical shift") +
ylab("Predicted chemical shift") +
ggtitle("Prediction of chemical shift")
p1=p1+geom_point(x=df$y[j], y = df$y.hat[j],color='red')+
geom_errorbar(data=df[j,,drop=F], aes(ymin=min.se, ymax=max.se),color='red', width=.00001)
p1
colnames(acv)
j=21
df <- data.frame(y= acv[,j], y.hat= acv2$predicted_matrix[,j],
min.se=acv2$lower_bound_matrix[,j],
max.se=acv2$upper_bound_matrix[,j])
p1 <- ggplot(df, aes(x = y, y = y.hat)) +
geom_errorbar(aes(ymin=min.se, ymax=max.se), width=.00001) +
geom_point() +
geom_abline(intercept=0, slope=1, linetype=2) +
xlab("Obtained chemical shift") +
ylab("Predicted chemical shift") +
ggtitle("Prediction of chemical shift")
p1=p1+geom_point(x=df$y[j], y = df$y.hat[j],color='red')+
geom_errorbar(data=df[j,,drop=F], aes(ymin=min.se, ymax=max.se),color='red', width=.00001)
p1
j=21
df <- data.frame(y= millorat_cow_7$final_output$intensity[,j], y.hat= acv2$predicted_matrix[,j],
min.se=acv2$lower_bound_matrix[,j],
max.se=acv2$upper_bound_matrix[,j])
p1 <- ggplot(df, aes(x = y, y = y.hat)) +
geom_errorbar(aes(ymin=min.se, ymax=max.se), width=.00001) +
geom_point() +
geom_abline(intercept=0, slope=1, linetype=2) +
xlab("Obtained chemical shift") +
ylab("Predicted chemical shift") +
ggtitle("Prediction of chemical shift")
p1=p1+geom_point(x=df$y[j], y = df$y.hat[j],color='red')+
geom_errorbar(data=df[j,,drop=F], aes(ymin=min.se, ymax=max.se),color='red', width=.00001)
p1
prova_intensity=acv2$predicted_matrix
prova_intensity=cbind(acv2$predicted_matrix,rep(146,NA))
prova_intensity=cbind(acv2$predicted_matrix,rep(NA,146))
prova_intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]
prova_shift=predicted_shift
prova_shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]
prova_width=predicted_width
prova_width[,apply(predicted_width,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$half_band_width[,apply(predicted_width,2,function(x)all(is.na(x)))]
tec2=sapply(seq(length(prova_intensity)),function(x)sum(peakpvoigt(c(prova_intensity[x],prova_shift[x],prova_width[x]*0.5/600.2,0),initial_corrected$ppm))*initial_corrected$buck_step)
dim(tec2)=dim(prova_intensity)
tec2[,apply(tec2,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$quantification[,apply(tec2,2,function(x)all(is.na(x)))]
View(predicted_intensity)
View(predicted_width)
prova_intensity=as.matrix(cbind(acv2$predicted_matrix,rep(NA,146)))
prova_intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]
prova_shift=predicted_shift
prova_shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]
prova_width=predicted_width
prova_width[,apply(predicted_width,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$half_band_width[,apply(predicted_width,2,function(x)all(is.na(x)))]
tec2=sapply(seq(length(prova_intensity)),function(x)sum(peakpvoigt(c(prova_intensity[x],prova_shift[x],prova_width[x]*0.5/600.2,0),initial_corrected$ppm))*initial_corrected$buck_step)
dim(tec2)=dim(prova_intensity)
tec2[,apply(tec2,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$quantification[,apply(tec2,2,function(x)all(is.na(x)))]
tec3=profiling_names_corrected$final_output$quantification
sol=which(profiling_names_corrected$final_output$fitting_error>0.05)
tec3[sol]=tec[sol]
toc2=diag(cor(profiling_names_corrected$final_output$quantification[,ind],TIC_normalization2[,ind2] ,method='spearman'))
toc3=diag(cor(tec[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc4=diag(cor(tec3[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc5=diag(cor(tec2[,ind],TIC_normalization2[,ind2],method='spearman'))
metadata=factor(rep(c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation"),c(length(toc2),length(toc3),length(toc4),length(toc5))),levels =c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation") )
data=data.frame(shift=c(toc2,toc3,toc4,toc5),metadata=metadata)
p10 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
# geom_boxplot() +
# geom_point(aes(fill = metadata), size = 5, shape = 21, position = position_jitterdodge()) +
geom_violin()+
scale_fill_manual(values=c("Original"="yellow","Profiling reimplementation"="red", "Selective quantification editing"="blue","Quantification editing"="green")) +
labs(title='Spearman correlation between quantifications of metabolites in MS and NMR data',
y="rho",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p10
TIC_normalization <- as.data.frame(readr::read_csv("C:/Users/Usuario/Downloads/TIC.normalization.csv"))
TIC_normalization2=t(TIC_normalization[,-c(1:6,141:165)])
colnames(TIC_normalization2)=TIC_normalization[,2]
ind=c(58,21,13,14,36,110,98,68,69,6,38,20,57,92,60,33,51)
ind2=c(21,1,4,2,10,17,18,24,26,29,37,40,48,49,53,62,59)
tec3=profiling_names_corrected$final_output$quantification
sol=which(profiling_names_corrected$final_output$fitting_error>0.05)
tec3[sol]=tec[sol]
toc2=diag(cor(profiling_names_corrected$final_output$quantification[,ind],TIC_normalization2[,ind2] ,method='spearman'))
toc3=diag(cor(tec[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc4=diag(cor(tec3[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc5=diag(cor(tec2[,ind],TIC_normalization2[,ind2],method='spearman'))
metadata=factor(rep(c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation"),c(length(toc2),length(toc3),length(toc4),length(toc5))),levels =c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation") )
data=data.frame(shift=c(toc2,toc3,toc4,toc5),metadata=metadata)
p10 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
# geom_boxplot() +
# geom_point(aes(fill = metadata), size = 5, shape = 21, position = position_jitterdodge()) +
geom_violin()+
scale_fill_manual(values=c("Original"="yellow","Profiling reimplementation"="red", "Selective quantification editing"="blue","Quantification editing"="green")) +
labs(title='Spearman correlation between quantifications of metabolites in MS and NMR data',
y="rho",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p10
source('C:/Users/Usuario/Downloads/prediction_code/autorun_new_generation_5.R', echo=TRUE)
millorat_cow_7=autorun_new_generation_5(initial_corrected,profiling_names_corrected$final_output,profiling_names_corrected$useful_data,initial_corrected$ROI_data)
millorat_cow_8=autorun_new_generation_5(initial_corrected,profiling_names_corrected$final_output,profiling_names_corrected$useful_data,initial_corrected$ROI_data)
TIC_normalization <- as.data.frame(readr::read_csv("C:/Users/Usuario/Downloads/TIC.normalization.csv"))
TIC_normalization2=t(TIC_normalization[,-c(1:6,141:165)])
colnames(TIC_normalization2)=TIC_normalization[,2]
ind=c(58,21,13,14,36,110,98,68,69,6,38,20,57,92,60,33,51)
ind2=c(21,1,4,2,10,17,18,24,26,29,37,40,48,49,53,62,59)
toc2=diag(cor(profiling_names_corrected$final_output$quantification[,ind],TIC_normalization2[,ind2] ,method='spearman'))
toc3=diag(cor(tec[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc4=diag(cor(millorat_cow_8$final_output$quantification[,ind],TIC_normalization2[,ind2],use='pairwise.complete.obs',method='spearman'))
toc5=diag(cor(millorat_cow_7$final_output$quantification[,ind],TIC_normalization2[,ind2],method='spearman'))
metadata=factor(rep(c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation"),c(length(toc2),length(toc3),length(toc4),length(toc5))),levels =c("Original","Quantification editing","Selective quantification editing","Profiling reimplementation") )
data=data.frame(shift=c(toc2,toc3,toc4,toc5),metadata=metadata)
p10 <- ggplot(data, aes(x = metadata, y = shift, fill = metadata)) +
# geom_boxplot() +
# geom_point(aes(fill = metadata), size = 5, shape = 21, position = position_jitterdodge()) +
geom_violin()+
scale_fill_manual(values=c("Original"="yellow","Profiling reimplementation"="red", "Selective quantification editing"="blue","Quantification editing"="green")) +
labs(title='Spearman correlation between quantifications of metabolites in MS and NMR data',
y="rho",x='') +
theme_bw() + theme(legend.title=element_blank(),legend.position="bottom",panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p10
t.test(millorat_cow_7[1:52,13],millorat_cow_7[53:69,13])
t.test(millorat_cow_7$final_output$quantification[1:52,13],millorat_cow_7$final_output$quantification[53:69,13])
t.test(profiling_names_corrected$final_output$quantification[1:52,13],profiling_names_corrected$final_output$quantification[53:69,13])
t.test(profiling_names_corrected$final_output$quantification[1:52,14],profiling_names_corrected$final_output$quantification[53:69,14])
t.test(millorat_cow_7$final_output$quantification[1:52,14],millorat_cow_7$final_output$quantification[53:69,14])
alc=t.test(millorat_cow_7$final_output$quantification[1:52,14],millorat_cow_7$final_output$quantification[53:69,14])
diff(alc$conf.int)
sapply(millorat_cow_7$final_output$quantification,2,function(x)t.test(x[1:52],x[53:69])$conf.int)
apply(millorat_cow_7$final_output$quantification,2,function(x)t.test(x[1:52],x[53:69])$conf.int)
acv=millorat_cow_7$final_output$quantification[,apply(millorat_cow_7$final_output$quantification,2,function(x)all(is.na(x)))]
apply(acv,2,function(x)t.test(x[1:52],x[53:69])$conf.int)
acv=millorat_cow_7$final_output$quantification[,!apply(millorat_cow_7$final_output$quantification,2,function(x)all(is.na(x)))]
apply(acv,2,function(x)t.test(x[1:52],x[53:69])$conf.int)
acv=millorat_cow_7$final_output$quantification[,!apply(millorat_cow_7$final_output$quantification,2,function(x)all(is.na(x)))]
apply(acv,2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int))
acv=millorat_cow_7$final_output$quantification[,!apply(millorat_cow_7$final_output$quantification,2,function(x)all(is.na(x)))]
acv2=profiling_names_corrected$final_output$quantification[,!apply(profiling_names_corrected$final_output$quantification,2,function(x)all(is.na(x)))]
acv3=rbind(apply(acv,2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)),
apply(acv2,2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)))
acv2=profiling_names_corrected$final_output$quantification[,!is.na(profiling_names_corrected$final_output$quantification[1,])]
acv=millorat_cow_7$final_output$quantification[,!is.na(millorat_cow_7$final_output$quantification[1,])]
acv2=profiling_names_corrected$final_output$quantification[,!is.na(profiling_names_corrected$final_output$quantification[1,])]
acx=intersect(which(is.na(millorat_cow_7$final_output$quantification[1,])==F),which(is.na(profiling_names_corrected$final_output$quantification[1,])==F))
acv3=rbind(apply(millorat_cow_7$final_output$quantification[,acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)),
apply(profiling_names_corrected$final_output$quantification[,acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)))
View(acv3)
View(acv3)
acx=c(which(initial_corrected$ROI_data[,5]==0),grep('Sum',initial_corrected$ROI_data[,3]))
acv3=rbind(apply(millorat_cow_7$final_output$quantification[,acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)),
apply(profiling_names_corrected$final_output$quantification[,acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)))
acx=c(which(initial_corrected$ROI_data[,5]==0),grep('Sum',initial_corrected$ROI_data[,3]))
acv3=rbind(apply(millorat_cow_7$final_output$quantification[,-acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)),
apply(profiling_names_corrected$final_output$quantification[,-acx],2,function(x)diff(t.test(x[1:52],x[53:69])$conf.int)))
fivenum(diff(acv3))
diff(acv3)
fivenum(diff(acv3))
fivenum(acv3[1,],acv3[2,])
fivenum(acv3[1,]acv3[2,])
fivenum(acv3[1,]/acv3[2,])
library(grid)
library(gridExtra)
library(ggplot2)
sapply(list.files('C:/Users/Usuario/Downloads/prediction_code',full.names=T),source)
sapply(list.files('C:/Users/Usuario/Documents/GitHub/rDolphin/R',full.names=T),source)
load("C:/Bruker/TopSpin3.2/data/RamirezN/data_analysis/ramirezn_data_2.RData")
load("C:/Bruker/TopSpin3.2/data/MNavarro_femtes_IRSI/data_analysis/resultats_paper_3.RData")
# ac_quantification=log10(ac$final_output$quantification+1)
# millorat_quantification=log10(millorat$final_output$quantification+1)
# profiling_names_corrected_quantification=log10(profiling_names_corrected$final_output$quantification+1)
# millorat_cow_5_quantification=log10(millorat_cow_7$final_output$quantification+1)
ac$final_output$fitting_error[ac$final_output$fitting_error>1]=1
millorat$final_output$fitting_error[millorat$final_output$fitting_error>1]=1
profiling_names_corrected$final_output$fitting_error[profiling_names_corrected$final_output$fitting_error>1]=1
millorat_cow_7$final_output$fitting_error[millorat_cow_7$final_output$fitting_error>1]=1
profiling_names_corrected$final_output$fitting_error[profiling_names_corrected$final_output$fitting_error<(-1)]=1
millorat_cow_7$final_output$fitting_error[millorat_cow_7$final_output$fitting_error<(-1)]=1
profiling_names_corrected$final_output$fitting_error[which(profiling_names_corrected$final_output$fitting_error<0)]=abs(profiling_names_corrected$final_output$fitting_error[which(profiling_names_corrected$final_output$fitting_error<0)])
millorat_cow_7$final_output$fitting_error[which(millorat_cow_7$final_output$fitting_error<0)]=abs(millorat_cow_7$final_output$fitting_error[which(millorat_cow_7$final_output$fitting_error<0)])
ac$final_output$fitting_error[ac$final_output$fitting_error<(-1)]=1
millorat$final_output$fitting_error[millorat$final_output$fitting_error<(-1)]=1
ac$final_output$fitting_error[which(ac$final_output$fitting_error<0)]=abs(ac$final_output$fitting_error[which(ac$final_output$fitting_error<0)])
millorat$final_output$fitting_error[which(millorat$final_output$fitting_error<0)]=abs(millorat$final_output$fitting_error[which(millorat$final_output$fitting_error<0)])
TIC_normalization <- as.data.frame(readr::read_csv("C:/Users/Usuario/Downloads/TIC.normalization.csv"))
TIC_normalization2=t(TIC_normalization[,-c(1:6,141:165)])
colnames(TIC_normalization2)=TIC_normalization[,2]
ind=c(58,21,13,14,36,110,98,68,69,6,38,20,57,92,60,33,51)
ind2=c(21,1,4,2,10,17,18,24,26,29,37,40,48,49,53,62,59)
predicted_shift=millorat_cow_7$predicted_shift
predicted_width=millorat_cow_7$predicted_width
predicted_width[,apply(predicted_width,2,function(x)length(unique(x)))==1]=NA
predicted_intensity=millorat_cow_7$predicted_intensity
prova_intensity=predicted_intensity
prova_intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$intensity[,apply(predicted_intensity,2,function(x)all(is.na(x)))]
prova_shift=predicted_shift
prova_shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$shift[,apply(predicted_shift,2,function(x)all(is.na(x)))]
prova_width=predicted_width
prova_width[,apply(predicted_width,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$half_band_width[,apply(predicted_width,2,function(x)all(is.na(x)))]
tec=sapply(seq(length(prova_intensity)),function(x)sum(peakpvoigt(c(prova_intensity[x],prova_shift[x],prova_width[x]*0.5/600.2,0),initial_corrected$ppm))*initial_corrected$buck_step)
dim(tec)=dim(prova_intensity)
tec[,apply(tec,2,function(x)all(is.na(x)))]=profiling_names_corrected$final_output$quantification[,apply(tec,2,function(x)all(is.na(x)))]
tec3=profiling_names_corrected$final_output$quantification
sol=which(profiling_names_corrected$final_output$fitting_error>0.05)
tec3[sol]=tec[sol]
aa=robustbase::lmrob(profiling_names_corrected$final_output$quantification[,ind]~TIC_normalization2[,ind2])
ind=c(58,21,13,14,36,110,98,68,69,6,38,20,57,92,60,33,51)
ind2=c(21,1,4,2,10,17,18,24,26,29,37,40,48,49,53,62,59)
asa=robustbase::lmrob(profiling_names_corrected$final_output$quantification[,ind[1]]~TIC_normalization2[,ind2[1]])
asa$residuals
asa2=predict(asa,TIC_normalization2[,ind2[1])
asa2=predict(asa,TIC_normalization2[,ind2[1]])
?predict
asa2=robustbase::predict(asa,TIC_normalization2[,ind2[1]])
?robustbase::predict.lmrob
asa2=predict(asa)
plot(asa$fitted.values,profiling_names_corrected$final_output$quantification[,ind[1]])
plot(asa$fitted.values-profiling_names_corrected$final_output$quantification[,ind[1]])
points(asa$residuals,col='red')
plot(asa$residuals,col='red')
points(asa$fitted.values-profiling_names_corrected$final_output$quantification[,ind[1]])
plot(asa$residuals,asa$fitted.values-profiling_names_corrected$final_output$quantification[,ind[1]])
plot(asa$residuals,asa$fitted.values+profiling_names_corrected$final_output$quantification[,ind[1]])
asa=abs(robustbase::lmrob(profiling_names_corrected$final_output$quantification[,ind[1]]~
TIC_normalization2[,ind2[1]])$residuals)
asa2=abs(robustbase::lmrob(millorat_cow_7$final_output$quantification[,ind[1]]~
TIC_normalization2[,ind2[1]])$residuals)
fivenum(asa)
fivenum(asa2)
asa/asa2
boxplot(asa/asa2)
fivenum(asa/asa2)
mean(asa/asa2)
?robustbase::lmrob
a1<-robustbase::lmrob.control()
a1$max.it=2000
asa=sapply(1:17,function(x)abs(mean(abs(robustbase::lmrob(profiling_names_corrected$final_output$quantification[,ind[1]]~
TIC_normalization2[,ind2[1]],control=a1)$residuals)/
abs(robustbase::lmrob(millorat_cow_7$final_output$quantification[,ind[1]]~
TIC_normalization2[,ind2[1]],control=a1)$residuals))
asa2=predict(asa)
a1<-robustbase::lmrob.control()
a1$max.it=2000
asa=sapply(1:17,function(x)abs(mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[1]]~
profiling_names_corrected$final_output$quantification[,ind[1]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[1]]~millorat_cow_7$final_output$quantification[,ind[1]],
control=a1)$residuals))
)
asa=sapply(1:17,function(x)mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[1]]~
profiling_names_corrected$final_output$quantification[,ind[1]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[1]]~millorat_cow_7$final_output$quantification[,ind[1]],
control=a1)$residuals)))
asa=sapply(1:17,function(x)mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
profiling_names_corrected$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~millorat_cow_7$final_output$quantification[,ind[x]],
control=a1)$residuals)))
asa
asa=100*(sapply(1:17,function(x)mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
asa
sapply(1:17,function(x)mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))
x=1
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)
fivenum(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals))
fivenum(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals))
fivenum(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals))
fivenum(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)-1)
100*fivenum(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)-1)
100*mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)-1)
asa=100*(sapply(1:17,function(x)median(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
asa
boxplot(asa)
which.min(asa)
asa=100*(sapply(1:17,function(x)mean(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
asa
asa2=100*(sapply(1:17,function(x)median(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
tec[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
tec
asa2
boxplot(asa,asa2)
asa=100*(sapply(1:17,function(x)median(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
millorat_cow_7$final_output$quantification[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
boxplot(asa,asa2)
asa3=100*(sapply(1:17,function(x)median(abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~
tec3[,ind[x]],control=a1)$residuals)/
abs(robustbase::lmrob(TIC_normalization2[,ind2[x]]~profiling_names_corrected$final_output$quantification[,ind[x]],
control=a1)$residuals)))-1)
asa3
boxplot(asa,asa2,asa3)
which.min(asa)
which.min(asa2)
which.min(asa3)
plot(profiling_names_corrected$final_output$quantification[,ind[12]],TIC_normalization2,ind2[12])
plot(profiling_names_corrected$final_output$quantification[,ind[12]],TIC_normalization2[,ind2[12])
plot(profiling_names_corrected$final_output$quantification[,ind[12]],TIC_normalization2[,ind2[12]])
points(millorat_cow_7$final_output$quantification[,ind[12]],TIC_normalization2[,ind2[12]],col='red')
plot(log10(profiling_names_corrected$final_output$quantification[,ind[12]]),log10(TIC_normalization2[,ind2[12]]))
points(log10(millorat_cow_7$final_output$quantification[,ind[12]]),log10(TIC_normalization2[,ind2[12]]),col='red')
