zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
plot(zx)
t.test(ab2,ab)$statistic
ab=rnorm(1000,1,1)
ab2=rnorm(1000,1,1.1)
zx=1
while (min(zx)<0.5) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[which.max(abs(zx))]
print(max(zx))
}
zx=1
while (min(zx)>0.5) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[which.max(abs(zx))]
print(max(zx))
}
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
zx=1
while (min(zx)>0.1) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[which.max(abs(zx))]
print(max(zx))
}
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
zx=1
while (min(zx)>0.1) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[which.max(abs(zx))]
print(max(zx))
}
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
zx=1
while (min(zx)>0.1) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[-which.max(abs(zx))]
print(max(zx))
}
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
zx=1
while (min(zx)>0.01) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[-which.max(abs(zx))]
print(max(zx))
}
median(zx)
print(max(abs(zx)))
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
zx=1
while (max(abs(zx))>0.01) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[-which.max(abs(zx))]
print(max(abs(zx)))
}
t.test(ab2,ab)$statistic
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
t.test(ab2,ab)$statistic
t.test(ab2[1:999],ab[1:999])$statistic
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,2,1.1)
zx=1
while (max(abs(zx))>0.01) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[-which.max(abs(zx))]
print(max(abs(zx)))
}
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,20,1.1)
zx=1
while (max(abs(zx))>0.01) {
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$statistic)
ab2=ab2[-which.max(abs(zx))]
print(max(abs(zx)))
}
plot(sort(abs(zx)))
zx=sapply(1:length(ab2),function(x)t.test(ab2[-x],ab)$p.value)
plot(sort(zx))
zx
order(zx)
idx=seq(length(ab2))
rf=1
while (rf>0.1) {
res=sapply(idx,function(x)t.test(ab2[idx],ab)$statistic)
idx=setdiff(idx,which.min(res))
rf=min(res)
print(rf)
}
idx=seq(length(ab2))
rf=1
while (rf>0.1) {
res=sapply(idx,function(x)t.test(ab2[idx],ab)$statistic)
idx=setdiff(idx,which.min(res))
rf=min(res)
print(rf)
}
idx=seq(length(ab2))
rf=1
while (rf>0.1) {
res=sapply(idx,function(x)t.test(ab2[idx],ab)$statistic)
if (min(res)==rf) stop
idx=setdiff(idx,which.min(res))
rf=min(res)
print(rf)
}
idx=seq(length(ab2))
rf=1
while (rf>0.1) {
res=sapply(idx,function(x)t.test(ab2[idx],ab)$statistic)
if (min(res)==rf) break
idx=setdiff(idx,which.min(res))
rf=min(res)
print(rf)
}
t.test(ab2,ab)$statistic
t.test(ab2,ab)
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
t.test(ab2,ab)
ks.test(ab2,ab)
wilcox.test(ab2,ab)
t.test(rank(ab2),rank(ab))
plot(ecdf(ab))
lines(ecdf(ab2))
install.packages("fitdistrplus")
library(fitdistrplus)
data(groundbeef)
serving <- groundbeef$serving
fitg <- fitdist(serving, "gamma")
summary(fitg)
plot(fitg)
plot(fitg, demp = TRUE)
zx=sapply(1:length(ab2),function(x)ks.test(ab2[-x],ab)$p.value)
boxplot(zx)
sort(zx)
plot(density(ab))
lines(density(ab2))
lines(density(ab2),col='red')
lines(density(ab2[zx>mean(zx)]),col='blue')
zx=sapply(1:length(ab2),function(x)wilcox.test(ab2[-x],ab)$p.value)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>mean(zx)]),col='blue')
boxplot(zx)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx<mean(zx)]),col='blue')
ecdf(ab)
noc=ecdf(ab)
plot(sort(ab)-sort(ab2))
summart(sort(ab))
summary(sort(ab))
Fn(ab)
ecdf(ab)(ab)
lol=ecdf(ab)(ab)
plot(lol)
plot(sort(lol))
sz=plot(ecdf(ab))
plot(ecdf(ab)
)
plot(lo,ab)
plot(lol,ab)
plot(ab,lol)
library(MASS)
fit <- fitdistr(ab, "normal")
plot(fit)
library(fitdistrplus)
FIT <- fitdist(ab, "norm")
plot(FIT)
?density
density(ab,from=min(ab),to=max(ab))
density(ab,from=min(ab),to=max(ab))$y
plot(density(ab,from=min(ab),to=max(ab))$y)
cor(density(ab,from=min(ab),to=max(ab))$y,density(ab,from=min(ab),to=max(ab))$y)
cor(density(ab,from=min(ab),to=max(ab))$y,
density(ab2,from=min(ab),to=max(ab))$y)
zx=sapply(1:length(ab2),function(x)sum(abs(density(ab,from=min(ab),to=max(ab))$y-
density(ab2[-x],from=min(ab),to=max(ab))$y))))
zx=sapply(1:length(ab2),function(x)sum(abs(density(ab,from=min(ab),to=max(ab))$y-
density(ab2[-x],from=min(ab),to=max(ab))$y)))
zx
boxplot(zx)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>6.55]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx<6.65]),col='blue')
zx=sapply(1:length(ab2),function(x)residuals(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y)))
boxplot(zx)
nonn=lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2,from=min(ab),to=max(ab))$y))
nonn=lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2,from=min(ab),to=max(ab))$y)
summary(nonn)
nonn=summary(nonn)
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y)))$sigma)
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$sigma)
boxplot(zx)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx<0.0091]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>0.0091]),col='blue')
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
boxplot(zx)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>0.09952]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>0.9952]),col='blue')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
boxplot(zx)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx>0.7715]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx<0.7715]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[zx<order(zx,decreasing =T)[1:10]]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:10]]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:20]]),col='blue')
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)summary(lm(density(ab,from=min(ab),to=max(ab))$y~
density(ab2[-x],from=min(ab),to=max(ab))$y))$r.squared)
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
plot(quantile(ab,seq(0.01,1,0.01)),quantile(ab2,seq(0.01,1,0.01)))
plot(quantile(ab,seq(0.01,1,0.01)),quantile(ab2,seq(0.01,1,0.01)),type='l')
plot(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01)),type='l')
plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
plot(quantile(ab,seq(0.01,1,0.01))
)
plot(quantile(ab2,seq(0.01,1,0.01)))
plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
plot(density(ab))
lines(density(ab2),col='red')
lines(density(ab2[-order(zx,decreasing =T)[1:50]]),col='blue')
ab2=ab2[-order(zx,decreasing =T)[1:50]]
plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx,decreasing =T)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
lines(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
plot(density(ab))
lines(density(ab2),col='red')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
plot(density(ab))
lines(density(ab2),col='red')
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,0.5,1.1)
step=0
# plot(abs(quantile(ab,seq(0.01,1,0.01))-quantile(ab2,seq(0.01,1,0.01))),type='l')
while(step<10) {
zx=sapply(1:length(ab2),function(x)sum(abs(quantile(ab,seq(0.01,1,0.01))-
quantile(ab2[-x],seq(0.01,1,0.01)))))
ab2=ab2[-order(zx)[1:20]]
step=step+1
}
wilcox.test(ab2,ab)
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1.1)
wilcox.test(ab2,ab)
set.seed(1);ab=rnorm(1000,1,1)
set.seed(1);ab2=rnorm(1000,1,1)
wilcox.test(ab2,ab)
set.seed(1);ab=rnorm(900,1,1)
set.seed(1);ab2=rnorm(900,1,1)
wilcox.test(ab2,ab)
lol2=boot::boot(rf_model,func,R=100)$t
?boot::boot
findCorrelation()
?caret::findCorrelation
findCorrelation(cor(matrix(rnorm(100),10,10)), cutoff = .9)
caret::findCorrelation(cor(matrix(rnorm(100),10,10)), cutoff = .9)
caret::findCorrelation(cor(matrix(rnorm(100),10,10)), cutoff = .1)
cor(matrix(rnorm(100),10,10))
cut(rnorm(10),breaks=c(0,0.5))
cut(runif(10),breaks=c(0,0.5))
cut(runif(10),breaks=c(0,0.5,1.5))
?caret::BoxCoxTrans
ratio <- exp(logBBB)
bc <- BoxCoxTrans(ratio)
library(caret)
ratio <- exp(logBBB)
bc <- BoxCoxTrans(ratio)
data(BloodBrain)
ratio <- exp(logBBB)
bc <- BoxCoxTrans(ratio)
predict(bc, ratio)
imported_data=import_data(file.path(system.file(package = "rDolphin"),"extdata","Parameters_MTBLS242_15spectra_5groups.csv"))
library(rDolphin)
imported_data=import_data(file.path(system.file(package = "rDolphin"),"extdata","Parameters_MTBLS242_15spectra_5groups.csv"))
debug(import_data)
imported_data=import_data(file.path(system.file(package = "rDolphin"),"extdata","Parameters_MTBLS242_15spectra_5groups.csv"))
n
n
imported_data=import_data(file.path(system.file(package = "rDolphin"),"extdata","Parameters_MTBLS242_15spectra_5groups.csv"))
metadata_path
setwd(file.path(system.file(package = "rDolphin"),"extdata")
)
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
program_parameters
dummy=read.csv(as.character(import_profile[14, 2]),stringsAsFactors = F,row.names = 1)
import_profile[14, 2]
dummy=read.csv(file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv"),stringsAsFactors = F,row.names = 1)
dummy
dummy=tryCatch({read.csv(as.character(import_profile[14, 2]),stringsAsFactors = F,row.names = 1)
},error=function(cond) {
read.csv(file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv"),stringsAsFactors = F,row.names = 1)
})
rm(dummy)
dummy=tryCatch({read.csv(as.character(import_profile[14, 2]),stringsAsFactors = F,row.names = 1)
},error=function(cond) {
read.csv(file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv"),stringsAsFactors = F,row.names = 1)
})
undebug(import_data)
file.exists(as.character(import_profile[14, 2]))
debug(import_data)
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
file.exists(as.character(import_profile[14, 2]))
file.exists(import_profile[14, 2])
import_profile[14, 2]
file.exists(as.character(import_profile[14, 2]))
file.exists(file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv"))
if (file.exists(as.character(import_profile[14, 2]))) {
prog_par_path=as.character(import_profile[14, 2])
} else if (file.exists(file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv"))) {
prog_par_path=file.path(system.file(package = "rDolphin"),"extdata","fitting_variables.csv")
} else {
print("Error. Please provide a valid parameters csv file.")
return()
}
program_parameters=as.list(t(
read.csv(prog_par_path,
stringsAsFactors = F,
row.names = 1)))
program_parameters
program_parameters=read.csv(prog_par_path,
stringsAsFactors = F)
View(program_parameters)
program_parameters=read.csv(prog_par_path,
stringsAsFactors = F)
dummy=program_parameters[,1]
program_parameters=as.list(t(program_parameters[,2]))
names(program_parameters)=dummy
program_parameters
dummy2=lapply(program_parameters,as.numeric)
program_parameters[which(!is.na(dummy2))]=dummy2[which(!is.na(dummy2))]
program_parameters
library(rDolphin)
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
profiling_data=automatic_profiling(imported_data,imported_data$ROI_data)
?import_data
?signparpred
#'
setwd(paste(system.file(package = "rDolphin"),"extdata",sep='/'))
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
load("MTBLS242_subset_profiling_data.RData")
chemical_shift_pred=signparpred(profiling_data$final_output$chemical_shift,profiling_data$final_output$fitting_error)
install.packages("roxygen")
install.packages("roxygen2")
library(rDolphin)
?signparpred
setwd(paste(system.file(package = "rDolphin"),"extdata",sep='/'))
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
load("MTBLS242_subset_profiling_data.RData")
setwd(paste(system.file(package = "rDolphin"),"extdata",sep='/'))
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
load("MTBLS242_subset_profiling_data.RData")
library(rDolphin)
chemical_shift_pred=signparpred(profiling_data$final_output$chemical_shift,profiling_data$final_output$fitting_error)
intensity_pred=signparpred(profiling_data$final_output$intensity,profiling_data$final_output$fitting_error,imported_data$ROI_data[,4])
setwd(paste(system.file(package = "rDolphin"),"extdata",sep='/'))
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
profiling_data=automatic_profiling(imported_data,imported_data$ROI_data)
