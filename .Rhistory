results <- rfe(miss2, metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
results <- rfe(miss2[,-1], metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
colnames(shift_clean)=paste(colnames(shift_clean),'shift',sep='_')
combined_mtbls237=as.data.frame(cbind(Area_clean,shift_clean))
miss=missForest(data.matrix(combined_mtbls237))$ximp
miss2=scale(miss,center=T,scale=T)
ind=which(metadata==4)
miss2=miss2[-ind,]
metadata=droplevels(metadata[-ind])
results <- rfe(miss2, metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
# plot the results
results2 <- rfe(miss2[,seq(ncol(Area_clean))], metadata, sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
# list the chosen features
# plot the results
results3 <- rfe(miss2[,(ncol(Area_clean)+1):ncol(miss2)], metadata, sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
Metadata_expanded <- read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata_expanded.csv")
lel=matrix(NA,8,6)
Metadata_expanded$Factor.Value.Disease.Characterisation..[which(is.na(Metadata_expanded$Factor.Value.Disease.Characterisation..))]="Control"
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeUC"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveUC")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[1,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeUC"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="Control")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[2,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="Control"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveUC")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[3,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeUC"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeCD")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[4,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveUC"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveCD")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[5,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeCD"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveCD")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[6,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="Control"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="activeCD")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[7,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
ind=sort(c(which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="Control"),which(Metadata_expanded$Factor.Value.Disease.Characterisation..=="inactiveCD")))
results <- rfe(miss2[ind,], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results
predictors(results)
results2 <- rfe(miss2[ind,seq(ncol(Area_clean))], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
results3 <- rfe(miss2[ind,(ncol(Area_clean)+1):ncol(miss2)], factor(Metadata_expanded$Factor.Value.Disease.Characterisation..[ind]), sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
lel[8,]=unlist(c(results$results[which.max(results$results[,2]),c(2,4)],results2$results[which.max(results2$results[,2]),c(2,4)],results3$results[which.max(results3$results[,2]),c(2,4)]))
lel
View(shift_clean)
apply(shift_clean,2,function(x)sd(x,na.rm=T)/mean(x,na.rm=T))
shift_clean=cbind(shift_clean,shift[,1])
View(shift_clean)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
shift_clean=cbind(shift_clean,shift[,1])
View(shift)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
colnames(shift_clean)=paste(colnames(shift_clean),'shift',sep='_')
combined_mtbls237=as.data.frame(cbind(Area_clean,shift_clean))
miss=missForest(data.matrix(combined_mtbls237))$ximp
miss2=scale(miss,center=T,scale=T)
ind=which(metadata==4)
miss2=miss2[-ind,]
metadata=droplevels(metadata[-ind])
shift_clean2=cbind(shift_clean,rep(0,114))
shift_clean_2=scale(shift_clean_2,center=T,scale=F)
shift_clean2=scale(shift_clean2,center=T,scale=F)
apply(shift_clean2,2,function(x)sd(x,na.rm=T))
replicate(c(2,3),5)
replicate(5,c(2,3))
matr=matrix(NA,24,24)
for (i in 1:24) {
cvb=replicate(24,shift_clean2[,i])
matr[i,]=apply(shift_clean2,2,function(x)sd(x,na.rm=T))
}
rowMeans(cvb)
View(matr)
matr=matrix(NA,24,24)
for (i in 1:24) {
cvb=replicate(24,shift_clean2[,i])
matr[i,]=apply(shift_clean2-cvb,2,function(x)sd(x,na.rm=T))
}
rowMeans(cvb)
View(matr)
rowMeans(matr)
rownames(matr)=colnames(shift_clean2)
rowMeans(matr)
sort(rowMeans(matr))
i=1
shift_clean=shift_clean2-cvb
cvb=replicate(24,shift_clean2[,i])
shift_clean=shift_clean2-cvb
Area_clean=Area_clean[,-1]
colnames(shift_clean)
i=7
cvb=replicate(24,shift_clean2[,i])
shift_clean=shift_clean2-cvb
colnames(shift_clean)[24="TSP_shift"]
colnames(shift_clean)[24]="TSP_shift"
combined_mtbls237=as.data.frame(cbind(Area_clean,shift_clean))
miss=missForest(data.matrix(combined_mtbls237))$ximp
miss2=scale(miss,center=T,scale=T)
ind=which(metadata==4)
miss2=miss2[-ind,]
metadata=droplevels(metadata[-ind])
results <- rfe(miss2, metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
# plot the results
results2 <- rfe(miss2[,seq(ncol(Area_clean))], metadata, sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
# list the chosen features
# plot the results
results3 <- rfe(miss2[,(ncol(Area_clean)+1):ncol(miss2)], metadata, sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
View(combined_mtbls237)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
colnames(shift_clean)=paste(colnames(shift_clean),'shift',sep='_')
View(shift_clean)
shift_clean=cbind(shift_clean,rep(0,114))
View(shift_clean)
shift_clean=shift_clean-replicate(24,shift_clean[,7])
combined_mtbls237=as.data.frame(cbind(Area_clean,shift_clean))
miss=missForest(data.matrix(combined_mtbls237))$ximp
miss2=scale(miss,center=T,scale=T)
ind=which(metadata==4)
miss2=miss2[-ind,]
metadata=droplevels(metadata[-ind])
results <- rfe(miss2, metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
# plot the results
results2 <- rfe(miss2[,seq(ncol(Area_clean))], metadata, sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
# list the chosen features
# plot the results
results3 <- rfe(miss2[,(ncol(Area_clean)+1):ncol(miss2)], metadata, sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
View(miss2)
which(is.na(miss2[1,]))
miss2=miss2[,-22]
results <- rfe(miss2, metadata, sizes=seq(5,50,5), rfeControl=control)
results
# list the chosen features
predictors(results)
# plot the results
results2 <- rfe(miss2[,seq(ncol(Area_clean))], metadata, sizes=seq(5,50,5), rfeControl=control)
results2
predictors(results2)
# list the chosen features
# plot the results
results3 <- rfe(miss2[,(ncol(Area_clean)+1):ncol(miss2)], metadata, sizes=seq(5,50,5), rfeControl=control)
results3
predictors(results3)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
cor(shift_clean[,1],shift_clean[,2])
cor(shift_clean[,1],shift_clean[,2],use='pairwise.comple.obs')
cor(shift_clean[,1],shift_clean[,2],use='pairwise.complete.obs')
summary(lm(shift_clean[,1],shift_clean[,2]))
summary(lm(shift_clean[,1]~shift_clean[,2]))
shift_clean=cbind(shift_clean,rep(0,114))
shift_clean=shift_clean-replicate(24,shift_clean[,7])
summary(lm(shift_clean[,1],shift_clean[,2]))
summary(lm(shift_clean[,1]~shift_clean[,2]))
cor(shift_clean[,1],shift_clean[,2],use='pairwise.comple.obs')
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
acv=summary(lm(shift_clean[,1]~shift_clean[,2]))
acv$sigma
shift_clean2=cbind(shift_clean,rep(0,114))
matr=matrix(NA,2,24)
for (i in 1:24) {
cvb=shift_clean2-replicate(24,shift_clean[,i])
matr[1,i]=summary(lm(cvb[,1]~cvb[,2]))$sigma
matr[2,i]=summary(lm(cvb[,3]~cvb[,4]))$sigma
}
matr=matrix(NA,2,24)
for (i in 1:24) {
cvb=shift_clean2-replicate(24,shift_clean2[,i])
matr[1,i]=summary(lm(cvb[,1]~cvb[,2]))$sigma
matr[2,i]=summary(lm(cvb[,3]~cvb[,4]))$sigma
}
View(matr)
colnames(matr)=colnames(Area_clean)
colnames(matr)=colnames(shift_clean2)
colMeans(matr)
matr=matrix(NA,24,24)
for (i in 1:24) {
cvb=shift_clean2-replicate(24,shift_clean2[,i])
matr[i,]=apply(cvb,2,function(x)summary(lm(cvb[,1]~x))$sigma
}
matr=matrix(NA,24,24)
for (i in 1:24) {
cvb=shift_clean2-replicate(24,shift_clean2[,i])
matr[i,]=apply(cvb,2,function(x)summary(lm(cvb[,1]~x))$sigma)
}
View(matr)
colnames(matr)=colnames(shift_clean2)
colMeans(matr)
library(readxl)
# combined_mtbls374 <- as.data.frame(read_excel("~/combined_mtbls374.xlsx"))
library(missForest)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/MTBLS374_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/MTBLS374_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/MTBLS374_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/MTBLS374_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.08]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.08]=NA
# shift=shift[,-ind]
aa=fread("C:/Bruker/TopSpin3.2/data/MTBLS374/s_BoEfRTP2 Serum NMR.txt")
aa=aa[which(!is.na(aa$`Factor Value[smoking status]`)),]
metadata=factor(aa$`Factor Value[smoking status]`)
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
library(rDolphin)
aa=p_values(Area_clean,cbind(1:113,metadata))
aa
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/signal_area_ratio.csv")[,-1])
Area=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/MTBLS237_session_5_associated_data/quantification.csv")[,-1])
ind=which(is.na(colSums(fitting_error)))
Area[signal_area_ratio<5]=NA
Area[,-ind][fitting_error[,-ind]>0.1]=NA
shift[signal_area_ratio<5]=NA
shift[,-ind][fitting_error[,-ind]>0.1]=NA
# shift=shift[,-ind]
metadata <- factor(as.vector(as.data.frame(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS237/data_analysis/Metadata.csv"))[,3]))
for (j in unique(metadata)) {
for (i in seq(ncol(Area))) {
Area[(Area[which(metadata==j),i] %in% boxplot.stats(Area[which(metadata==j),i])$out),i]=NA
}
for (i in seq(ncol(shift))) {
shift[(shift[which(metadata==j),i] %in% boxplot.stats(shift[which(metadata==j),i])$out),i]=NA
}
}
ind=apply(Area,2,function(x)length(which(is.na(x))))
Area_clean=Area[,ind<30]
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<30]
ind=c()
def=sapply(colnames(Area_clean),function(x)substr(x,1,nchar(x)-2))
def2=which(duplicated(def)==F)
def4=apply(Area_clean,2,function(x)length(which(is.na(x))))
for (i in def2) {
def3=which(def==def[i])
ind=c(ind,def3[which.min(def4[def3])])
}
Area_clean=Area_clean[,ind]
Area_clean=Area_clean[,-1]
colnames(shift_clean)=paste(colnames(shift_clean),'shift',sep='_')
combined_mtbls237=as.data.frame(cbind(Area_clean,shift_clean))
miss=missForest(data.matrix(combined_mtbls237))$ximp
