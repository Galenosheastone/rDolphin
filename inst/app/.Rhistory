mem=shift_clean-replicate(ncol(shift_clean),shift_clean[,i])
natri3[i,]=apply(mem,2,function(x)sd(x,na.rm=T))
}
#Info best global aligner
nnen=apply(natri3,1,fivenum)
colnames(nnen)=colnames(shift_clean)
View(nnen)
library(readr)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS1/data analysis/13032017_associated_data/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS1/data analysis/13032017_associated_data/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS1/data analysis/13032017_associated_data/signal_area_ratio.csv")[,-1])
library(readxl)
shift <- data.matrix(read_excel("C:/Users/user/Downloads/shift.xlsx")[,-c(1:3)])
shift[signal_area_ratio<5]=NA
shift[fitting_error>.15]=NA
View(shift)
ind=apply(shift,2,function(x)length(which(is.na(x))))
shift_clean=shift[,ind<100]
natri3=matrix(NA,ncol(shift_clean),ncol(shift_clean))
for (i in 1:ncol(shift_clean)) {
mem=shift_clean-replicate(ncol(shift_clean),shift_clean[,i])
natri3[i,]=apply(mem,2,function(x)sd(x,na.rm=T))
}
#Info best global aligner
nnen=apply(natri3,1,fivenum)
colnames(nnen)=colnames(shift_clean)
shift
View(shift)
dd=apcluster(negDistMat(r=2),q=0.5,t(scale(shift_clean,center=T,scale=F)))
show(dd)
dd=apcluster(negDistMat(r=2),q=0.5,t(scale(shift_clean,center=T,scale=T)))
show(dd)
plot(shift_clean$Histidine_1)
plot(shift_clean[,45])
plot(shift_clean[,48])
plot(shift_clean[,48],shift_clean[,15])
plot(shift_clean[,49],shift_clean[,15])
plot(shift_clean[,50],shift_clean[,15])
plot(shift_clean[,51],shift_clean[,15])
plot(shift_clean[,52],shift_clean[,15])
plot(shift_clean[,53],shift_clean[,15])
plot(shift_clean[,3],shift_clean[,5])
colnames(shift_clean)
summum=rep(NA,col(shift_clean))
summum=rep(NA,ncol(shift_clean))
for (j in 1:ncol(shift_clean)) {
summum[j]=median(abs(summary(lm(shift_clean[,j]~shift_clean[,15]))$residuals))
}
View(nnen)
sort(nnen[3,])
rowMeans(natri3)
han=rowMeans(natri3)
names(han)=colnames(shift_clean)
han
sort(han)
View(nnen)
def3=rbind(apply(shift_clean,2,function(x)sd(x,na.rm=T)),summum)
colnames(def3)=colnames(shift_clean)
View(def3)
summary(rlm(shift_clean[,j]~shift_clean[,15]))$residuals)
library(robust)
summary(rlm(shift_clean[,j]~shift_clean[,15]))$residuals
summum=rep(NA,ncol(shift_clean))
for (j in 1:ncol(shift_clean)) {
summum[j]=median(abs(summary(lm(shift_clean[,j]~shift_clean[,15]))$residuals))
}
def3=rbind(apply(shift_clean,2,function(x)sd(x,na.rm=T)),summum)
colnames(def3)=colnames(shift_clean)
View(def3)
summum=rep(NA,ncol(shift_clean))
for (j in 1:ncol(shift_clean)) {
summum[j]=median(abs(summary(rlm(shift_clean[,j]~shift_clean[,15]))$residuals))
}
def3=rbind(apply(shift_clean,2,function(x)sd(x,na.rm=T)),summum)
colnames(def3)=colnames(shift_clean)
View(def3)
def3=def3[order(der3[1,],decreasing=T),]
def3=def3[order(def3[1,],decreasing=T),]
def3=def3[,order(def3[1,],decreasing=T)]
View(def3)
write.csv(nnen,'sd_metabolites_global_alignment_MTBLS242.csv')
write.csv(def3,'residuals_metabolites_MTBSL242.csv')
savehistory("~/mtbls242_data.RData")
save.image("~/mtbls242_data.RData")
library(readxl)
Supplementary_Data <- read_excel("C:/Users/user/Downloads/11306_2016_1101_MOESM1_ESM/Supplementary Data.xlsx")
View(Supplementary_Data)
tan=data.matrix(Supplementary_Data[18:32,])
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan,center=T,scale=F)))
show(de)
View(tan)
tan=data.matrix(Supplementary_Data[18:32,1:54])
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan,center=T,scale=F)))
show(de)
tan=data.matrix(Supplementary_Data[18:32,2:54])
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan,center=T,scale=F)))
show(de)
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan,center=T,scale=T)))
show(de)
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan,center=T,scale=F)))
apply(tan,2,sd)
apply(tan,2,function(x)sd(x,na.rm=T))
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan[which(mar<0.1)],center=T,scale=F)))
mar=apply(tan,2,function(x)sd(x,na.rm=T))
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan[which(mar<0.1)],center=T,scale=F)))
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan[,which(mar<0.1)],center=T,scale=F)))
show(de)
de=apcluster(negDistMat(r=2),q=0.5,t(scale(tan[,which(mar<0.01)],center=T,scale=F)))
show(de)
Supplementary_Data <- read_excel("C:/Users/user/Downloads/11306_2016_1101_MOESM1_ESM/Supplementary Data.xlsx")
library(readxl)
Supplementary_Data <- read_excel("C:/Users/user/Downloads/11306_2016_1101_MOESM1_ESM/Supplementary Data.xlsx")
View(Supplementary_Data)
tan=data.matrix(Supplementary_Data[18:32,])
ab=cor(tan)
View(ab)
?read_excel
Supplementary_Data2 <- read_excel("C:/Users/user/Downloads/11306_2016_1101_MOESM1_ESM/Supplementary Data.xlsx",sheet=2)
View(Supplementary_Data2)
tan2=data.matrix(Supplementary_Data2[1:15,])
Supplementary_Data3 <- read_excel("C:/Users/user/Downloads/11306_2016_1101_MOESM1_ESM/Supplementary Data.xlsx",sheet=3)
tan3=data.matrix(Supplementary_Data3[1:15,])
View(tan3)
ab2=cor(tan2,use='pairwise.complete.obs')
View(ab2)
ab3=cor(tan3,use='pairwise.complete.obs')
View(ab3)
ab=cor(tan,use='pairwise.complete.obs',method='spearman')
View(ab)
colnames(ab)
tan=tan-replicate(66,tan[,32])
View(tan)
ab=cor(tan,use='pairwise.complete.obs',method='spearman')
View(ab)
View(tan2)
colnames(tan2)
View(tan2)
tan2=tan2-replicate(59,tan[,37])
tan2=data.matrix(Supplementary_Data2[1:15,])
tan2=tan2-replicate(59,tan2[,37])
ab2=cor(tan2,use='pairwise.complete.obs',method='spearman')
View(ab2)
tan4=data.matrix(Supplementary_Data2[18:32,])
View(cor(tan4,use='pairwise.complete.obs',method='spearman'))
View(ab2)
library(Dolphin)
Dolphin_GUI
Dolphin_GUI()
load("C:/Bruker/TopSpin3.2/data/RuiSimoes/data_analysis/2803sessionfetus.RData")
path='.'
finaloutput=savedreactivedata$finaloutput
imported_data=savedreactivedata$imported_data
useful_data=savedreactivedata$useful_data
path=paste(path,'plots/',sep='/')
dir.create(path)
ind3=which(apply(finaloutput$shift,2, function(x) all(is.na(x)))==F)
print('Be patient. This could take a while. Take another cup of coffee, meanwhile')
p <- vector(mode = "list", length = nrow(imported_data$dataset))
pb   <- txtProgressBar(1, length(ind3), style=3)
ind3
ind3=50
library(reshape2)
library(ggplot2)
library(grid)
library(gridExtra)
p <- vector(mode = "list", length = nrow(imported_data$dataset))
pb   <- txtProgressBar(1, length(ind3), style=3)
for (ind2 in ind3) {
for (ind in 1:nrow(imported_data$dataset)) {
Xdata=try(useful_data[[ind]][[ind2]]$Xdata,silent=T)
Ydata=useful_data[[ind]][[ind2]]$Ydata
plot_data=useful_data[[ind]][[ind2]]$plot_data
ROI_profile=useful_data[[ind]][[ind2]]$ROI_profile
plotdata2 = data.frame(Xdata=Xdata,
Ydata=Ydata,
plot_data[3, ] ,
plot_data[2, ])
colnames(plotdata2)=c('Xdata','Ydata',"fitted_sum","baseline_sum")
plotdata3 <- melt(plotdata2, id = "Xdata")
plotdata3$variable = c(
rep('Original Spectrum', length(Ydata)),
rep('Generated Spectrum', length(Ydata)),
rep('Generated Background', length(Ydata))
)
plotdata4 = data.frame(Xdata, (t(plot_data[-c(1, 2, 3), , drop = F])))
colnames(plotdata4)=c('Xdata',rownames(plot_data)[-c(1, 2, 3)])
plotdata5 = melt(plotdata4, id = "Xdata")
r=which(paste(ROI_profile[,4],ROI_profile[,5],sep='_')==imported_data$signals_names[ind2])
plotdata = data.frame(Xdata, signals = plot_data[3 + r, ] )
p[[ind]]=ggplot() +
geom_line(data = plotdata3,
aes(
x = Xdata,
y = value,
colour = variable,
group = variable
)) +
geom_line(data = plotdata5,
aes(
x = Xdata,
y = value,
colour = 'Surrounding signals',
group = variable
)) +
geom_area(
data = plotdata,
aes(
x = Xdata,
y = signals,
fill = 'Quantified Signal'
)
) + theme(legend.position = "none", text = element_text(size=5)) + ggtitle(paste(imported_data$Experiments[ind]," - fitting error ",round(finaloutput$fitting_error[ind,ind2],3)," - signal/area ratio ",round(finaloutput$signal_area_ratio[ind,ind2],3),sep=''))+
scale_x_reverse() + labs(x='ppm',y='Intensity')
}
grid.arrange(rectGrob(), rectGrob())
ml <- marrangeGrob(p, top = imported_data$signals_names[ind2],nrow=3, ncol=1)
ggsave(paste(path,imported_data$signals_names[ind2],".pdf",sep=''),  ml)
}
library(readxl)
MTBLS374 <- as.data.frame(read_excel("C:/Users/user/Downloads/MTBLS374.xlsx",
sheet = "Hoja2"))
View(MTBLS374)
library(readxl)
MTBLS374 <- as.data.frame(read_excel("C:/Users/user/Downloads/MTBLS374.xlsx",
sheet = "Hoja2"))
data=MTBLS374[,-c(1:5)]
data=MTBLS374[which(!is.na(MTBLS374[,3])),-c(1:5)]
View(data)
metadata=MTBLS374[which(!is.na(MTBLS374[,3])),3:5]
which(metadata[,1]=='Never Smoker')
asd=apply(data,2,function(x) t.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
which(metadata[,1]=='Smoker')
t.test(data[which(metadata[,1]=='Never Smoker'),1],data[which(metadata[,1]=='Smoker'),1])$p.value)
t.test(data[which(metadata[,1]=='Never Smoker'),1],data[which(metadata[,1]=='Smoker'),1])$p.value
asd=rep(NA,108)
for (i in 1:108) asd[i]=t.test(data[which(metadata[,i]=='Never Smoker'),1],data[which(metadata[,i]=='Smoker'),1])$p.value
for (i in 1:108) asd[i]=t.test(data[which(metadata[,1]=='Never Smoker'),i],data[which(metadata[,1]=='Smoker'),i])$p.value
data[,68]
data[,67]
data=data.matrix(MTBLS374[which(!is.na(MTBLS374[,3])),-c(1:5)])
asd=apply(data,2,function(x) t.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
asd
sort(asd)
asd2=apply(data,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
sort(asd2)
colnames(data)
t.test(data[which(metadata[,1]=='Never Smoker'),69],data[which(metadata[,1]=='Smoker'),69])$p.value
t.test(data[which(metadata[,1]=='Never Smoker'),15],data[which(metadata[,1]=='Smoker'),15])$p.value
t.test(data[which(metadata[,1]=='Never Smoker'),15],data[which(metadata[,1]=='Smoker'),15])
t.test(data[which(metadata[,1]=='Never Smoker'),69],data[which(metadata[,1]=='Smoker'),69])
asd2
sort(asd2)
View(metadata)
asd3=apply(data,2,function(x) wilcox.test(x[which(metadata[,1]=='male')],x[which(metadata[,1]=='female')])$p.value)
asd3=apply(data,2,function(x) wilcox.test(x[which(metadata[,2]=='male')],x[which(metadata[,2]=='female')])$p.value)
sort(asd3)
summary(lm(data[which(metadata[,1]=='Never Smoker'),69],data[which(metadata[,1]=='Smoker'),69]))$p.value
summary(lm(data[,69],data[metadata[,3]))
summary(lm(data[,69],metadata[,3]))
summary(lm(data[,69]~metadata[,3]))
summary(lm(data[,69]~metadata[,3]))$p.value
cd=summary(lm(data[,69]~metadata[,3]))
cd$coefficients
summary(lm(data[,69]~metadata[,3]))$coefficents[2,4]
summary(lm(data[,69]~metadata[,3]))$coefficients[2,4]
asd4=apply(data,2,function(x) summary(lm(x~metadata[,3]))$coefficents[2,4])
sort(asd4)
asd4=apply(data,2,function(x) summary(lm(x~metadata[,3]))$coefficients[2,4])
sort(asd4)
colnames(data)[55:108]=paste(colnames(data)[1:54],"_shift")
data=data.matrix(MTBLS374[which(!is.na(MTBLS374[,3])),-c(1:5)])
colnames(data)[55:108]=paste(colnames(data)[1:54],"shift",sep="_")
metadata=data.matrix(MTBLS374[which(!is.na(MTBLS374[,3])),1:3])
metadata=data.matrix(MTBLS374[which(!is.na(MTBLS374[,3])),3:5])
metadata=MTBLS374[which(!is.na(MTBLS374[,3])),3:5]
write_excel_csv(cbind(metadata,data),file='MTBLS374_combined.csv')
library(readxl)
write_excel_csv(cbind(metadata,data),file='MTBLS374_combined.csv')
library(readr)
write_excel_csv(cbind(metadata,data),file='MTBLS374_combined.csv')
write_excel_csv(cbind(metadata,data),'MTBLS374_combined.csv')
getwd()
Dolphin_GUI()
Dolphin_GUI()
Dolphin_GUI()
Dolphin_GUI()
Dolphin_GUI()
load("C:/Bruker/TopSpin3.2/data/MTBLS24/data_analysis/data.RData")
p_values(savedreactivedata$finaloutput$shift,savedreactivedata$imported_data$Metadata[,-1])
savedreactivedata$imported_data$Metadata
p_values(savedreactivedata$finaloutput$shift,savedreactivedata$imported_data$Metadata[,-1])
p_values(savedreactivedata$finaloutput$shift,savedreactivedata$imported_data$Metadata)
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS249/data_analysis/output_info/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS249/data_analysis/output_info/signal_area_ratio.csv")[,-1])
w=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS249/data_analysis/output_info/half_band_width.csv")[,-1])
w[signal_area_ratio<5]=NA
w[fitting_error>0.15]=NA
ind=apply(shift,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
w_clean=w[,ind<40]
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/signal_area_ratio.csv")[,-1])
w=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/half_band_width.csv")[,-1])
w[signal_area_ratio<5]=NA
w[fitting_error>0.15]=NA
ind=apply(shift,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
w_clean=w[,ind<40]
ind=apply(w,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
w_clean=w[,ind<40]
View(w_clean)
MTBLS374 <- as.data.frame(read_excel("C:/Users/user/Downloads/MTBLS374.xlsx",
sheet = "Hoja2"))
metadata=MTBLS374[which(!is.na(MTBLS374[,3])),3:5]
View(metadata)
asd=apply(data,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
asd=apply(w_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
sort(asd)
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/shift.csv")[,-1])
shift[signal_area_ratio<5]=NA
shift[fitting_error>0.15]=NA
ind=apply(shift,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
shift_clean=shift[,ind<40]
asd=apply(w_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
asd2=apply(shift_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
sort(asd2)
shift[signal_area_ratio<5]=NA
shift[fitting_error>0.15]=NA
ind=apply(shift,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
shift_clean=shift[,ind<40]
asd=apply(w_clean,2,function(x) t.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
asd2=apply(shift_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
sort(asd)
colnames(w_clean)=paste(colnames(w_clean),'width',sep='_')
write_excel_csv(w_clean,'dummy.csv')
write_excel_csv(as.data.frame(w_clean),'dummy.csv')
shift <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/shift.csv")[,-1])
fitting_error <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/fitting_error.csv")[,-1])
signal_area_ratio <- data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/signal_area_ratio.csv")[,-1])
w=data.matrix(read_csv("C:/Bruker/TopSpin3.2/data/MTBLS374/data_analysis/output_info/half_band_width.csv")[,-1])
w[signal_area_ratio<5]=NA
w[fitting_error>0.15]=NA
ind=apply(w,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
w_clean=w[,ind<40]
shift[signal_area_ratio<5]=NA
shift[fitting_error>0.15]=NA
ind=apply(shift,2,function(x)length(which(is.na(x))))
# shift_clean=shift[,ind<64]
shift_clean=shift[,ind<40]
asd=apply(w_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
asd2=apply(shift_clean,2,function(x) wilcox.test(x[which(metadata[,1]=='Never Smoker')],x[which(metadata[,1]=='Smoker')])$p.value)
show(asd)
sort(asd)
sort(asd2)
View(w_clean)
apply(w_clean,2,function(x)mad(x,na.rm=T)/median(x,na.rm=T))
asx=cor(w_clean,use='pairwise.complete.obs')
View(asx)
heatmpa(asx)
heatmap(asx)
asx=cor(t(w_clean),use='pairwise.complete.obs')
heatmap(asx)
plot(w_clean[1,],w_clean[2,])
zxc=scale(t(w_clean),center=T,scale=F)
plot(zxc[,1],w_clean[,2])
plot(zxc[,1],zxc[,2])
View(zxc)
zxc=t(scale(w_clean,center=T,scale=F))
plot(zxc[,1],zxc[,2])
asx=cor(zxc,use='pairwise.complete.obs')
heatmap(asx)
View(asx)
apply(w_clean,2,function(x)mad(x,na.rm=T))
colnames(zxc)
colnames(w_clean)
asx=cor(zxc[c(26,27,31),],use='pairwise.complete.obs')
View(asx)
asx=cor(zxc[c(3,4,11,26,27,31),],use='pairwise.complete.obs')
View(asx)
heatmap(asx)
View(zxc)
asx=cor(t(zxc[c(3,4,11,26,27,31),]),use='pairwise.complete.obs')
heatmap(asx)
View(asx)
library(readxl)
combined_mtbls374 <- as.data.frame(read_excel("~/combined_mtbls374.xlsx"))
asd2=apply(combined_mtbls374[,-c(1:4)],2,function(x) wilcox.test(x[which(combined_mtbls374[,2]=='Never Smoker')],x[which(combined_mtbls374[,2]=='Smoker')])$p.value)
combined_mtbls374[,-c(1:4)]=apply(combined_mtbls374[,-c(1:4)],2,as.numeric)
View(combined_mtbls374)
asd2=apply(combined_mtbls374[,-c(1:4)],2,function(x) wilcox.test(x[which(combined_mtbls374[,2]=='Never Smoker')],x[which(combined_mtbls374[,2]=='Smoker')])$p.value)
sort(asd2)
sort(apply(combined_mtbls374[,-c(1:4)],2,function(x)summary(lm(x~rer))$coefficients[2,4]))
sort(apply(combined_mtbls374[,-c(1:4)],2,function(x)summary(lm(x~combined_mtbls374$Glycine_1_shift))$coefficients[2,4]))
sort(apply(combined_mtbls374[,-5:58],2,function(x)summary(lm(x~combined_mtbls374$Glycine_1_shift))$coefficients[2,4]))
sort(apply(combined_mtbls374[,5:58],2,function(x)summary(lm(x~combined_mtbls374$Glycine_1_shift))$coefficients[2,4]))
plot(sort(apply(combined_mtbls374[,5:58],2,function(x)summary(lm(x~combined_mtbls374$Glycine_1_shift))$coefficients[2,4])))
asd2=apply(combined_mtbls374[,5:58],2,function(x) wilcox.test(x[which(combined_mtbls374[,2]=='Never Smoker')],x[which(combined_mtbls374[,2]=='Smoker')])$p.value)
sort(apply(combined_mtbls374[,5:58],2,function(x) wilcox.test(x[which(combined_mtbls374[,2]=='Never Smoker')],x[which(combined_mtbls374[,2]=='Smoker')])$p.value))
han=apply(combined_mtbls374[,5:58],2,function(x) predict(lmRob(x~combined_mtbls374$Glycine_1_shift))
library(robust)
han=apply(combined_mtbls374[,5:58],2,function(x) predict(lmRob(x~combined_mtbls374$Glycine_1_shift)))
han=apply(combined_mtbls374[,5:58],2,function(x) lmRob(x~combined_mtbls374$Glycine_1_shift)$residuals)
sort(apply(han,2,function(x) wilcox.test(x[which(combined_mtbls374[,2]=='Never Smoker')],x[which(combined_mtbls374[,2]=='Smoker')])$p.value))
library(Dolphin)
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
paste(system.file(package = "Dolphin"),"extdata",sep='/')
file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository"))
file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository")
library(Dolphin)
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
library(Dolphin)
Dolphin_GUI()
snr=apply(imported_data$dataset[,ind[which.min(flan)]:ind[which.min(flan)+1]],1,function(x)stats::mad(x,na.rm=T))
Q
library(Dolphin)
Dolphin_GUI()
system.time({imported_data=import_data("C:/Bruker/TopSpin3.2/data/MTBLS242_20170211_113451/data_analysis/Parameters_MTBLS242_prova.csv")
quantification_variables=autorun(imported_data,imported_data$finaloutput,imported_data$useful_data,imported_data$ROI_data,imported_data$ROI_separator)
write_info('output_info',quantification_variables$finaloutput,imported_data$ROI_data)})
system.time({imported_data=import_data("C:/Bruker/TopSpin3.2/data/MTBLS242_20170211_113451/data_analysis/Parameters_MTBLS242.csv")
quantification_variables=autorun(imported_data,imported_data$finaloutput,imported_data$useful_data,imported_data$ROI_data,imported_data$ROI_separator)
write_info('output_info',quantification_variables$finaloutput,imported_data$ROI_data)})
system.time({imported_data=import_data("C:/Bruker/TopSpin3.2/data/MTBLS1/data analysis/Parameters_MTBLS1.csv")
quantification_variables=autorun(imported_data,imported_data$finaloutput,imported_data$useful_data,imported_data$ROI_data,imported_data$ROI_separator)
write_info('output_info',quantification_variables$finaloutput,imported_data$ROI_data)})
system.time({imported_data=import_data("C:/Bruker/TopSpin3.2/data/MTBLS1/data analysis/Parameters_MTBLS1.csv")
quantification_variables=autorun(imported_data,imported_data$finaloutput,imported_data$useful_data,imported_data$ROI_data,imported_data$ROI_separator)
write_info('output_info',quantification_variables$finaloutput,imported_data$ROI_data)})
library(devtools)
devtools::install_github("danielcanueto/Dolphin")
browseVignettes("Dolphin")
devtools::install_github("danielcanueto/Dolphin",build_vignettes=T)
devtools::install_github("danielcanueto/Dolphin",build_vignettes=T,force?T)
devtools::install_github("danielcanueto/Dolphin",build_vignettes=T,force=T)
browseVignettes("Dolphin")
setwd(file.path(system.file(package = "Dolphin"),"extdata"))
imported_data=import_data("Parameters_MTBLS242_15spectra_5groups.csv")
Sys.time()
gsub(Sys.time()," ","_")
?Sys.time
?writeLines
devtools::install_github("danielcanueto/Dolphin", build_vignettes = TRUE)
?write.csv
library(data.table)
aa=fread("C:/Users/user/Documents/R/win-library/3.3/Dolphin/extdata/Dataset_MTBLS242_15spectra_5groups.csv")
View(aa)
?fread
class(aa[,1])
aa=fread("C:/Users/user/Documents/R/win-library/3.3/Dolphin/extdata/Dataset_MTBLS242_15spectra_5groups.csv",header0F)
aa=fread("C:/Users/user/Documents/R/win-library/3.3/Dolphin/extdata/Dataset_MTBLS242_15spectra_5groups.csv",header=F)
b=aa[1,]
class(b)
b=as.vector(aa[1,])
aa=data.matrix(fread("C:/Users/user/Documents/R/win-library/3.3/Dolphin/extdata/Dataset_MTBLS242_15spectra_5groups.csv",header=F))
aa
b=as.vector(aa[1,])
class(b)
class(aa[3,])
b=aa[1,]
repository=fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv")))
biofluid_column=which(colnames(repository)==biofluid)
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,der)]
repository=fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv"))
biofluid_column=which(colnames(repository)==biofluid)
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,der)]
repository=fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv"))
biofluid_column=which(colnames(repository)==Blood")
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,der)]
repository=fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv"))
biofluid_column=which(colnames(repository)=="Blood")
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,der)]
ff=repository[,biofluid_column]
repository=data.frame(fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv")))
biofluid_column=which(colnames(repository)=="Blood")
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,der)]
repository=data.frame(fread(file.path(system.file(package = "Dolphin"),"extdata","HMDB_Repository.csv")))
biofluid_column=which(colnames(repository)=="Blood")
repository=repository[!is.na(repository[,biofluid_column]),]
repository=repository[repository[,biofluid_column]>0,]
repository=repository[sort(repository[,biofluid_column],decreasing = T,index.return=T)$ix,c(1:3,5:7,biofluid_column)]
View(repository)
devtools::install_github("danielcanueto/Dolphin", build_vignettes = TRUE)
devtools::install_github("danielcanueto/Dolphin", build_vignettes = TRUE)
devtools::install_github("danielcanueto/Dolphin", build_vignettes = TRUE)
devtools::install_github("danielcanueto/Dolphin", build_vignettes = TRUE)
Dolphin_GUI()
runApp('~/GitHub/prova/inst/app')
